{"version":3,"sources":["webpack://Tela/webpack/universalModuleDefinition","webpack://Tela/webpack/bootstrap","webpack://Tela/./src/Canvas/main/ImageIO.js","webpack://Tela/./src/Canvas/main/Canvas.js","webpack://Tela/./src/Canvas/main/Canvas2D.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ImageIO","img","canvasAux","document","createElement","width","height","contextAux","getContext","fillStyle","globalCompositeOperation","fillRect","drawImage","canvas","getImageCanvas","getImageData","src","Image","isReady","onload","add","u","v","ans","floor","x","Math","diff","dot","squareNorm","norm","sqrt","min","max","solve2by2UpperTriMatrix","h","z","aux","solve2by2LowerTriMatrix","w","hashMap","Canvas","this","ctx","image","imageData","data","getSize","paintImage","putImageData","getCanvas","clearImage","rgba","useCanvasCtx","size","lambda","isClearImage","getImageIndex","getPxl","index","drawPxl","rgb","drawLine","x1","x2","shader","points","stack","push","inStack","outStack","length","intersectionSolutions","validIntersection","drawLineInt","pop","p0","nn","tangent","normal","fmin","Number","MAX_VALUE","minDir","k","j","f","abs","drawPolygon","array","isInsidePoly","isInsidePolygon","upperBox","MIN_VALUE","clampedSize","zeros","drawTriangle","x3","isInsideConvex","drawQuad","x4","drawCircle","corner","scale","isInsideCircle","addEventListener","useCapture","drawString","string","contextShader","fillText","theta","acos","PI","vDotN","orientation","simpleShader","color","element","colorShader","colors","interpolateTriangleShader","poly","alpha","interpolateColors","interpolateQuadShader","quad","t1","t2","triangleBaryCoord","triangle","interpolateLineShader","line","vnorm","projection","quadTextureShader","quadTexCoord","interpolation","bilinearInterpolation","imageCache","imageShader","imageCanvas","imgSize","interpolateTexCoord","cornerColors","finalColor","triangleCache","constains","triangleHash","undefined","set","reduce","hash","y","det","map","cache","values","acc","f03","createCanvas","domId","setAttribute","getElementById","appendChild","Canvas2D","cameraSpace","constructor","integerTransform","inverseTransform","y1","y2","y3","y4","setCamera","camera"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,IARjB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,8JClFrD,IAAMC,EAAU,CAOhBA,eAAyB,SAAAC,GACvB,IAAMC,EAAYC,SAASC,cAAc,UACzCF,EAAUG,MAAQJ,EAAII,MACtBH,EAAUI,OAASL,EAAIK,OACvB,IAAMC,EAAaL,EAAUM,WAAW,MAKxC,OAJAD,EAAWE,UAAY,mBACvBF,EAAWG,yBAA2B,cACtCH,EAAWI,SAAS,EAAG,EAAGT,EAAUG,MAAOH,EAAUI,QACrDC,EAAWK,UAAUX,EAAK,EAAG,GACtBC,GAMTF,iBAA2B,SAAAC,GAEzB,OADAY,OAASb,EAAQc,eAAeb,GACzBY,OAAOL,WAAW,MAAMO,aAAa,EAAG,EAAGd,EAAII,MAAOJ,EAAIK,SAGnEN,UAAoB,SAAAgB,GAClB,IAAMf,EAAM,IAAIgB,MAIhB,OAHAhB,EAAIe,IAAMA,EACVf,EAAIiB,SAAU,EACdjB,EAAIkB,OAAS,kBAAOlB,EAAIiB,SAAU,GAC3BjB,GAGTD,4BAAsC,SAAAC,GAAG,OAAI,kBAAMA,EAAIiB,WAExClB,ICDf,SAASoB,EAAIC,EAAGC,GACd,IAAIC,EAAM,GAGV,OAFAA,EAAI,GAAKF,EAAE,GAAKC,EAAE,GAClBC,EAAI,GAAKF,EAAE,GAAKC,EAAE,GACXC,EAGT,SAASC,EAAMC,GACb,IAAIF,EAAM,GAGV,OAFAA,EAAI,GAAKG,KAAKF,MAAMC,EAAE,IACtBF,EAAI,GAAKG,KAAKF,MAAMC,EAAE,IACfF,EAGT,SAASI,EAAKN,EAAGC,GACf,IAAIC,EAAM,GAGV,OAFAA,EAAI,GAAKF,EAAE,GAAKC,EAAE,GAClBC,EAAI,GAAKF,EAAE,GAAKC,EAAE,GACXC,EAGT,SAASK,EAAIP,EAAGC,GACd,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAGhC,SAASO,EAAWJ,GAClB,OAAOG,EAAIH,EAAGA,GAGhB,SAASK,EAAKL,GACZ,OAAOC,KAAKK,KAAKH,EAAIH,EAAGA,IAG1B,SAASO,EAAIX,EAAGC,GACd,IAAIC,EAAM,GAGV,OAFAA,EAAI,GAAKG,KAAKM,IAAIX,EAAE,GAAIC,EAAE,IAC1BC,EAAI,GAAKG,KAAKM,IAAIX,EAAE,GAAIC,EAAE,IACnBC,EAGT,SAASU,EAAIZ,EAAGC,GACd,IAAIC,EAAM,GAGV,OAFAA,EAAI,GAAKG,KAAKO,IAAIZ,EAAE,GAAIC,EAAE,IAC1BC,EAAI,GAAKG,KAAKO,IAAIZ,EAAE,GAAIC,EAAE,IACnBC,EAQT,SAASW,EAAwBb,EAAGc,EAAGC,GACrC,IAAIC,EAAMD,EAAE,GAAKf,EAAE,GACnB,MAAO,CAACgB,IAAOhB,EAAE,GAAKgB,EAAMD,EAAE,IAAMD,GAOtC,SAASG,EAAwBjB,EAAGkB,EAAGH,GACrC,IAAIC,EAAMD,EAAE,GAAKf,EAAE,GACnB,MAAO,CAACgB,IAAOhB,EAAE,GAAKgB,EAAMD,EAAE,IAAMG,GAItC,IAubQC,EAvbJC,EAAS,SAAU5B,GACrB6B,KAAK7B,OAASA,EACd6B,KAAKC,IAAM9B,EAAOL,WAAW,MAC7BkC,KAAKE,MAAQF,KAAKC,IAAI5B,aAAa,EAAG,EAAGF,EAAOR,MAAOQ,EAAOP,QAE9DoC,KAAKG,UAAYH,KAAKE,MAAME,MAM9BL,EAAO7C,UAAUmD,QAAU,WACzB,MAAO,CAACL,KAAK7B,OAAOP,OAAQoC,KAAK7B,OAAOR,QAM1CoC,EAAO7C,UAAUoD,WAAa,WAC5BN,KAAKC,IAAIM,aAAaP,KAAKE,MAAO,EAAG,IAGvCH,EAAO7C,UAAUsD,UAAY,WAC3B,OAAOR,KAAK7B,QAQd4B,EAAO7C,UAAUuD,WAAa,SAAUC,GACtCV,KAAKW,cAAa,SAACxC,GACjB,IAAIyC,EAAOzC,EAAOkC,UAClBlC,EAAO8B,IAAIlC,UACT,QAAU2C,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAK,IACtEvC,EAAO8B,IAAIjC,yBAA2B,cACtCG,EAAO8B,IAAIhC,SAAS,EAAG,EAAG2C,EAAK,GAAIA,EAAK,OACvC,IAGLb,EAAO7C,UAAUyD,aAAe,SAAUE,GAA8B,IAAtBC,EAAsB,wDACjEA,GACHd,KAAKC,IAAIM,aAAaP,KAAKE,MAAO,EAAG,GAEvCW,EAAOb,MACPA,KAAKE,MAAQF,KAAKC,IAAI5B,aACpB,EACA,EACA2B,KAAK7B,OAAOR,MACZqC,KAAK7B,OAAOP,QAEdoC,KAAKG,UAAYH,KAAKE,MAAME,MAG9BL,EAAO7C,UAAU6D,cAAgB,SAAUhC,GACzC,OAAO,GAAKiB,KAAK7B,OAAOR,MAAQoB,EAAE,GAAKA,EAAE,KAG3CgB,EAAO7C,UAAU8D,OAAS,SAAUjC,GAClC,IAAIkC,EAAQjB,KAAKe,cAAchC,GAC/B,MAAO,CACLiB,KAAKG,UAAUc,GACfjB,KAAKG,UAAUc,EAAQ,GACvBjB,KAAKG,UAAUc,EAAQ,GACvBjB,KAAKG,UAAUc,EAAQ,KAI3BlB,EAAO7C,UAAUgE,QAAU,SAAUnC,EAAGoC,GACtC,IAAIF,EAAQjB,KAAKe,cAAchC,GAC/BiB,KAAKG,UAAUc,GAASE,EAAI,GAC5BnB,KAAKG,UAAUc,EAAQ,GAAKE,EAAI,GAChCnB,KAAKG,UAAUc,EAAQ,GAAKE,EAAI,GAChCnB,KAAKG,UAAUc,EAAQ,GAAKE,EAAI,IAQlCpB,EAAO7C,UAAUkE,SAAW,SAAUC,EAAIC,EAAIC,GAE5CA,EAAOC,OAAS,CAACH,EAAIC,GAGrB,IAAIG,EAAQ,GACZA,EAAMC,KAAKL,GACXI,EAAMC,KAAKJ,GAGX,IAFA,IAAIK,EAAU,GACVC,EAAW,GACNtG,EAAI,EAAGA,EAAImG,EAAMI,OAAQvG,IAAK,CAGnC,IAFEyD,EAAI0C,EAAMnG,IAEL,IACPyD,EAAE,GAAKiB,KAAK7B,OAAOP,QACnB,GAAKmB,EAAE,IACPA,EAAE,GAAKiB,KAAK7B,OAAOR,MAEnBgE,EAAQD,KAAK3C,GAEb6C,EAASF,KAAK3C,GAIlB,GAAsB,GAAlB4C,EAAQE,OAAZ,CAKA,IAAIC,EAAwB,GACxBlD,EAAI,CAAC0C,EAAG,GAAKD,EAAG,GAAIC,EAAG,GAAKD,EAAG,IAGnCS,EAAsBJ,KACpBlC,EAAwBZ,IAAKoB,KAAK7B,OAAOP,OAAS,GAAI,EAAEyD,EAAG,IAAKA,EAAG,MAGrES,EAAsBJ,KACpB9B,EAAwBhB,IAAKoB,KAAK7B,OAAOR,MAAQ,GAAI,CACnDqC,KAAK7B,OAAOP,OAAS,EAAIyD,EAAG,IAC3BA,EAAG,MAIRS,EAAsBJ,KACpBlC,EAAwBZ,EAAGoB,KAAK7B,OAAOP,OAAS,EAAG,CACjDoC,KAAK7B,OAAOP,OAAS,EAAIyD,EAAG,GAC5BrB,KAAK7B,OAAOR,MAAQ,EAAI0D,EAAG,MAI/BS,EAAsBJ,KACpB9B,EAAwBhB,EAAGoB,KAAK7B,OAAOR,MAAQ,EAAG,EAC/C0D,EAAG,GACJrB,KAAK7B,OAAOR,MAAQ,EAAI0D,EAAG,MAI/B,IAAIU,EAAoB,GACxB,IAASzG,EAAI,EAAGA,EAAIwG,EAAsBD,OAAQvG,IAAK,CACrD,IAAIyD,EACA,IADAA,EAAI+C,EAAsBxG,IACnB,IAAMyD,EAAE,IAAM,GAAK,GAAKA,EAAE,IAAMA,EAAE,IAAM,GACjDgD,EAAkBL,KAAK3C,GAI3B,GAAgC,GAA5BgD,EAAkBF,OAGtB,GAAIF,EAAQE,OAAS,EAArB,CACE,IAAIzE,EAAI,CACNiE,EAAG,GAAKU,EAAkB,GAAG,GAAKnD,EAAE,GACpCyC,EAAG,GAAKU,EAAkB,GAAG,GAAKnD,EAAE,IAEtCoB,KAAKgC,YAAYL,EAAQM,MAAO7E,EAAGmE,OALrC,CASA,IAAIW,EAAK,CACPb,EAAG,GAAKU,EAAkB,GAAG,GAAKnD,EAAE,GACpCyC,EAAG,GAAKU,EAAkB,GAAG,GAAKnD,EAAE,IAEtC,IAAStD,EAAI,EAAGA,EAAIyG,EAAkBF,OAAQvG,IAAK,CAMjD,GAAI4D,EADAN,EAAIK,EAJJ7B,EAAI,CACNiE,EAAG,GAAKU,EAAkBzG,GAAG,GAAKsD,EAAE,GACpCyC,EAAG,GAAKU,EAAkBzG,GAAG,GAAKsD,EAAE,IAEtBsD,GACLtD,GAAK,KAEd,YADAoB,KAAKgC,YAAYE,EAAI9E,EAAGmE,GAI5BvB,KAAKgC,YAAYE,EAAIA,EAAIX,SApEvBvB,KAAKgC,YAAYL,EAAQ,GAAIA,EAAQ,GAAIJ,IAuE7CxB,EAAO7C,UAAU8E,YAAc,SAAUX,EAAIC,EAAIC,GAC/CF,EAAKvC,EAAMuC,GACXC,EAAKxC,EAAMwC,GAEX,IAAIL,EAAQ,EAAE,EAAG,EAAG,GAEhBlE,EAAIkE,EAAMY,OACVM,EAAKpF,EAAIA,EAETgC,EAAI,GACRA,EAAE,GAAKsC,EAAG,GACVtC,EAAE,GAAKsC,EAAG,GAEV,IAAIe,EAAUnD,EAAKqC,EAAID,GACnBgB,EAAS,GAMb,IALAA,EAAO,IAAMD,EAAQ,GACrBC,EAAO,GAAKD,EAAQ,GAEpBb,EAAOxC,EAAGwC,EAAOC,OAAQxB,MAElBjB,EAAE,KAAOuC,EAAG,IAAMvC,EAAE,KAAOuC,EAAG,IAAI,CAGvC,IAFA,IAAIgB,EAAOC,OAAOC,UACdC,EAAS,GACJC,EAAI,EAAGA,EAAIP,EAAIO,IAAK,CAC3B,IAAIpH,EAAI2F,EAAMyB,EAAI3F,GACd4F,EAAI1B,EAAMjC,KAAKF,MAAM4D,EAAI3F,IAIzB6B,EAAIK,EAFIP,EAAIK,EAAG,CAACzD,EAAGqH,IAEHtB,GAChBuB,EAAI5D,KAAK6D,IAAI3D,EAAIN,EAAGyD,IAAWnD,EAAIN,EAAGwD,GACtCE,EAAOM,IACTN,EAAOM,EACPH,EAAS,CAACnH,EAAGqH,IAKjBpB,EADAxC,EAAIL,EAAIK,EAAG0D,GACDlB,EAAOC,OAAQxB,MAE3BuB,EAAOxC,EAAGwC,EAAOC,OAAQxB,OAG3BD,EAAO7C,UAAU4F,YAAc,SAC7BC,EACAxB,GAOA,IALA,IADAyB,EACA,uDADejD,EAAOkD,gBAElBC,EAAW,CACb,CAACX,OAAOC,UAAWD,OAAOC,WAC1B,CAACD,OAAOY,UAAWZ,OAAOY,YAEnB7H,EAAI,EAAGA,EAAIyH,EAAMlB,OAAQvG,IAChC4H,EAAS,GAAK5D,EAAIyD,EAAMzH,GAAI4H,EAAS,IACrCA,EAAS,GAAK3D,EAAIwD,EAAMzH,GAAI4H,EAAS,IAGvC,IAAItC,EAAOZ,KAAKK,UACZ+C,EAAcnE,EAAK2B,EAAM,CAAC,EAAG,IAC7ByC,EAAQ,CAAC,EAAG,GAChBH,EAAS,GAAKpE,EAAMQ,EAAI8D,EAAa7D,EAAI8D,EAAOH,EAAS,MACzDA,EAAS,GAAKpE,EAAMQ,EAAI8D,EAAa7D,EAAI8D,EAAOH,EAAS,MAEzD,IAAK,IAAI5H,EAAI4H,EAAS,GAAG,GAAI5H,EAAI4H,EAAS,GAAG,GAAI5H,IAC/C,IAAK,IAAIqH,EAAIO,EAAS,GAAG,GAAIP,EAAIO,EAAS,GAAG,GAAIP,IAAK,CACpD,IAAI5D,EAAI,CAACzD,EAAGqH,GACRK,EAAajE,EAAGgE,IAClBxB,EAAOxC,EAAGgE,EAAO/C,QAYzBD,EAAO7C,UAAUoG,aAAe,SAAUjC,EAAIC,EAAIiC,EAAIhC,GACpD,IAAIwB,EAAQ,CAAC1B,EAAIC,EAAIiC,GACrBvD,KAAK8C,YAAYC,EAAOxB,EAAQxB,EAAOyD,iBASzCzD,EAAO7C,UAAUuG,SAAW,SAAUpC,EAAIC,EAAIiC,EAAIG,EAAInC,GACpDvB,KAAK8C,YAAY,CAACzB,EAAIC,EAAIiC,EAAIG,GAAKnC,IAGrCxB,EAAO7C,UAAUgB,UAAY,SAAUX,EAAKwB,GACtC,YAAaxB,IAAQA,EAAIiB,SAC7BwB,KAAKW,cAAa,SAACxC,GAAD,OAAYA,EAAO8B,IAAI/B,UAAUX,EAAKwB,EAAE,GAAIA,EAAE,QAGlEgB,EAAO7C,UAAUyG,WAAa,SAAU5E,EAAG3C,EAAGmF,GAC5C,IAAIqC,EAhWN,SAAejF,EAAGvC,GAChB,IAAIyC,EAAM,GAGV,OAFAA,EAAI,GAAKF,EAAE,GAAKvC,EAChByC,EAAI,GAAKF,EAAE,GAAKvC,EACTyC,EA4VMgF,CAAM,CAAC,EAAG,GAAIzH,GACvB8G,EAAW,CAACjE,EAAKF,EAAG6E,GAASlF,EAAIK,EAAG6E,IACpChD,EAAOZ,KAAKK,UAChB6C,EAAS,GAAKpE,EAAMQ,EAAIL,EAAK2B,EAAM,CAAC,EAAG,IAAKrB,EAAI,CAAC,EAAG,GAAI2D,EAAS,MACjEA,EAAS,GAAKpE,EAAMQ,EAAIL,EAAK2B,EAAM,CAAC,EAAG,IAAKrB,EAAI,CAAC,EAAG,GAAI2D,EAAS,MACjE,IAAK,IAAI5H,EAAI4H,EAAS,GAAG,GAAI5H,GAAK4H,EAAS,GAAG,GAAI5H,IAChD,IAAK,IAAIqH,EAAIO,EAAS,GAAG,GAAIP,GAAKO,EAAS,GAAG,GAAIP,IAAK,CACrD,IAAIvF,EAAI,CAAC9B,EAAGqH,GACR3C,KAAK8D,eAAe1G,EAAG2B,EAAG3C,IAC5BmF,EAAOnE,EAAG,CAAC2B,EAAG3C,GAAI4D,QAM1BD,EAAO7C,UAAU4G,eAAiB,SAAU1G,EAAG2B,EAAG3C,GAChD,OAAO+C,EAAWF,EAAK7B,EAAG2B,KAAO3C,EAAIA,GAGvC2D,EAAO7C,UAAU6G,iBAAmB,SAAUlH,EAAKgE,EAAQmD,GACzDhE,KAAK7B,OAAO4F,iBAAiBlH,EAAKgE,EAAQmD,IAG5CjE,EAAO7C,UAAU+G,WAAa,SAAUlF,EAAGmF,EAAQC,GACjDnE,KAAKW,cAAa,SAACxC,GACjBgG,EAAchG,EAAO8B,KACrB9B,EAAO8B,IAAImE,SAASF,EAAQnF,EAAE,GAAIA,EAAE,QAOxCgB,EAAOkD,gBAAkB,SAAUlE,EAAGgE,GAIpC,IAHA,IAAInE,EAAI,GACJyF,EAAQ,EACRtH,EAAIgG,EAAMlB,OACLvG,EAAI,EAAGA,EAAIyB,EAAGzB,IACrBsD,EAAE,GAAKK,EAAK8D,GAAOzH,EAAI,GAAKyB,GAAIgC,GAChCH,EAAE,GAAKK,EAAK8D,EAAMzH,GAAIyD,GACtBsF,GAASrF,KAAKsF,KAAKpF,EAAIN,EAAE,GAAIA,EAAE,KAAOQ,EAAKR,EAAE,IAAMQ,EAAKR,EAAE,MAE5D,OAAOI,KAAK6D,IAAIwB,EAAQ,EAAIrF,KAAKuF,IAAM,MAGzCxE,EAAOyD,eAAiB,SAAUzE,EAAGgE,GAInC,IAHA,IAAIrH,EAAIqH,EAAMlB,OACVjD,EAAI,GACJ4F,EAAQ,GACHlJ,EAAI,EAAGA,EAAII,EAAGJ,IAAK,CAC1BsD,EAAEtD,GAAK2D,EAAK8D,GAAOzH,EAAI,GAAKI,GAAIqH,EAAMzH,IACtC,IAAIyB,EAAI,EAAE6B,EAAEtD,GAAG,GAAIsD,EAAEtD,GAAG,IACpBc,EAAI6C,EAAKF,EAAGgE,EAAMzH,IACtBkJ,EAAMlJ,GAAK4D,EAAI9C,EAAGW,GAEpB,IAAI0H,EAAc7F,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAK,EAAI,GAAK,EACnE,IAAStD,EAAI,EAAGA,EAAII,EAAGJ,IAAK,CAE1B,GADYkJ,EAAMlJ,GAAKmJ,EACX,EAAG,OAAO,EAExB,OAAO,GAGT1E,EAAO2E,aAAe,SAAUC,GAC9B,OAAO,SAAC5F,EAAG6F,EAASzG,GAAb,OAAwBA,EAAO+C,QAAQnC,EAAG4F,KAGnD5E,EAAO8E,YAAc,SAAUC,GAW7B,OAAO/E,EAAOgF,2BAVE,SAAChG,EAAGiG,EAAM7G,EAAQ8G,GAEhC,IADA,IAAIC,EAAoB,CAAC,EAAG,EAAG,EAAG,GACzB5J,EAAI,EAAGA,EAAI0J,EAAKnD,OAAQvG,IAC/B4J,EAAkB,GAAKA,EAAkB,GAAKJ,EAAOxJ,GAAG,GAAK2J,EAAM3J,GACnE4J,EAAkB,GAAKA,EAAkB,GAAKJ,EAAOxJ,GAAG,GAAK2J,EAAM3J,GACnE4J,EAAkB,GAAKA,EAAkB,GAAKJ,EAAOxJ,GAAG,GAAK2J,EAAM3J,GACnE4J,EAAkB,GAAKA,EAAkB,GAAKJ,EAAOxJ,GAAG,GAAK2J,EAAM3J,GAErE6C,EAAO+C,QAAQnC,EAAGmG,OAKtBnF,EAAOoF,sBAAwB,SAAU5D,GACvC,OAAO,SAAUxC,EAAGqG,EAAMjH,GACxB,IAAIkH,EAAK,CAACD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC7BE,EAAK,CAACF,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC7BH,EAAQlF,EAAOwF,kBAAkBxG,EAAGsG,GAEtCJ,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,GACXjG,KAAK6D,IAAIoC,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAK,GAAK,MAE/C1D,EAAOxC,EAAGqG,EAAMjH,EAAQ,CAAC8G,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI,KAEvDA,EAAQlF,EAAOwF,kBAAkBxG,EAAGuG,GACpC/D,EAAOxC,EAAGqG,EAAMjH,EAAQ,CAAC8G,EAAM,GAAI,EAAGA,EAAM,GAAIA,EAAM,QAK5DlF,EAAOgF,0BAA4B,SAAUxD,GAC3C,OAAO,SAACxC,EAAGyG,EAAUrH,GACnB,IAAM8G,EAAQlF,EAAOwF,kBAAkBxG,EAAGyG,GAC1CjE,EAAOxC,EAAGyG,EAAUrH,EAAQ8G,KAIhClF,EAAO0F,sBAAwB,SAAUlE,GACvC,OAAO,SAACxC,EAAG2G,EAAMvH,GACf,IAAIS,EAAIK,EAAKyG,EAAK,GAAIA,EAAK,IACvBhG,EAAIT,EAAKF,EAAG2G,EAAK,IACjBC,EAAQxG,EAAWP,GACnBgH,EAAa1G,EAAIQ,EAAGd,GAExB2C,EAAOxC,EAAG2G,EAAMvH,EADC,GAATwH,EAAe,EAAIC,EAAaD,KAS5C5F,EAAO8F,kBAAoB,SACzBtI,EACAuI,GAEA,IADAC,EACA,uDADgBhG,EAAOiG,sBAEnBC,EAAa,KACXC,EAAc,SAACnH,EAAGqG,EAAMjH,EAAQ8G,GAC/B1H,EAAIiB,SAAyB,MAAdyH,IAClBA,EAAa,IAAIlG,EAAOzC,EAAQc,eAAeb,KAIjD,IAHA,IAAM4I,EAAcF,EACdG,EAAUD,EAAY9F,UACtBgG,EAAsB,CAAC,EAAG,GACvB/K,EAAI,EAAGA,EAAIwK,EAAajE,OAAQvG,IACvC+K,EAAoB,GAClBA,EAAoB,GAAKP,EAAaxK,GAAG,GAAK2J,EAAM3J,GACtD+K,EAAoB,GAClBA,EAAoB,GAAKP,EAAaxK,GAAG,GAAK2J,EAAM3J,GAExD,IAAIA,EAAI,EACL,EAAI+K,EAAoB,KAAOD,EAAQ,GAAK,IAC5CA,EAAQ,GAAK,GAAKC,EAAoB,IAKrC1D,EAAI7D,EAFRxD,EAAIiE,EAAI,CAAC,EAAG,GAAID,EAAIL,EAAK,CAACmH,EAAQ,GAAIA,EAAQ,IAAK,CAAC,EAAG,IAAK9K,KAGxDgL,EAAe,CACjBH,EAAYnF,OAAO2B,GACnBwD,EAAYnF,OAAOtC,EAAIiE,EAAG,CAAC,EAAG,KAC9BwD,EAAYnF,OAAOtC,EAAIiE,EAAG,CAAC,EAAG,KAC9BwD,EAAYnF,OAAOtC,EAAIiE,EAAG,CAAC,EAAG,MAE5B4D,EAAaR,EAAcO,EAAcrH,EAAK3D,EAAGqH,IACrDxE,EAAO+C,QAAQnC,EAAGwH,IAEpB,OAAOxG,EAAOoF,sBAAsBe,IAGtCnG,EAAOyG,eACC1G,EAAU,GAET,CACL2G,UAAW,SAACC,GAAD,OAAkDC,MAAhC7G,EAAQ4G,EAF1B,IAGXvK,IAAK,SAACuK,GAAD,OAAkB5G,EAAQ4G,EAHpB,IAIXE,IAAK,SAACF,EAAcnK,GAAf,OAA0BuD,EAAQ4G,EAJ5B,GAImDnK,KAIlEwD,EAAO2G,aAAe,SAAClB,GASrB,MARc,CACZA,EAAS,GAAG,GACZA,EAAS,GAAG,GACZA,EAAS,GAAG,GACZA,EAAS,GAAG,GACZA,EAAS,GAAG,GACZA,EAAS,GAAG,IAEDqB,QAAO,SAACpH,EAAGV,GAAJ,OAAU,GAAKU,EAAIV,IAAG,IAG5CgB,EAAOwF,kBAAoB,SAAUxG,EAAGyG,GACtC,IAAMsB,EAAO/G,EAAO2G,aAAalB,GAC3BuB,EAAI,CAAChI,EAAE,GAAKyG,EAAS,GAAG,GAAIzG,EAAE,GAAKyG,EAAS,GAAG,IACrD,IAAKzF,EAAOyG,cAAcC,UAAUK,GAAO,CACzC,IAAMnI,EAAI,CACR6G,EAAS,GAAG,GAAKA,EAAS,GAAG,GAC7BA,EAAS,GAAG,GAAKA,EAAS,GAAG,IAEzB5G,EAAI,CACR4G,EAAS,GAAG,GAAKA,EAAS,GAAG,GAC7BA,EAAS,GAAG,GAAKA,EAAS,GAAG,IAEzBwB,EAAMrI,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACnCmB,EAAOyG,cAAcI,IAAIE,EAAM,CAC7BtB,SAAUA,EACV7G,EAAGA,EAAEsI,KAAI,SAAClI,GAAD,OAAOA,EAAIiI,KACpBpI,EAAGA,EAAEqI,KAAI,SAAClI,GAAD,OAAOA,EAAIiI,KACpBA,IAAKA,EACLF,KAAMA,IAGV,IAAMI,EAAQnH,EAAOyG,cAAcrK,IAAI2K,GACjCnI,EAAIuI,EAAMvI,EACVC,EAAIsI,EAAMtI,EAEhB,GAAW,GADCsI,EAAMF,IACJ,MAAO,CAAC,EAAG,EAAG,GAC5B,IAAI/B,EAAQ,CAACrG,EAAE,GAAKmI,EAAE,GAAKnI,EAAE,GAAKmI,EAAE,GAAIpI,EAAE,GAAKoI,EAAE,GAAKpI,EAAE,GAAKoI,EAAE,IAC/D,MAAO,CAAC,EAAI9B,EAAM,GAAKA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAOnDlF,EAAOiG,sBAAwB,SAAUmB,EAAQpI,GAE/C,IADA,IAAIqI,EAAM,GACD1E,EAAI,EAAGA,EAAIyE,EAAOtF,OAAQa,IAAK,CACtC,IAAI2E,EAAMF,EAAO,GAAGzE,IAAMyE,EAAO,GAAGzE,GAAKyE,EAAO,GAAGzE,IAAM3D,EAAE,GAEvD6D,EAAIyE,GADEF,EAAO,GAAGzE,IAAMyE,EAAO,GAAGzE,GAAKyE,EAAO,GAAGzE,IAAM3D,EAAE,GACtCsI,GAAOtI,EAAE,GAC9BqI,EAAI1F,KAAKkB,GAEX,OAAOwE,GAQTrH,EAAOuH,aAAe,SAAU1G,EAAM2G,GACpC,IAAMpJ,EAASV,SAASC,cAAc,UAItC,OAHAS,EAAOqJ,aAAa,QAAS5G,EAAK,IAClCzC,EAAOqJ,aAAa,SAAU5G,EAAK,IACnCnD,SAASgK,eAAeF,GAAOG,YAAYvJ,GACpCA,GAGM4B,QCxmBX4H,EAAW,SAAUxJ,EAAQyJ,GAE/B,GADA7H,EAAOtE,KAAKuE,KAAM7B,GAEM,GAAtByJ,EAAY/F,QACc,GAAzB+F,EAAY,GAAG/F,QAAwC,GAAzB+F,EAAY,GAAG/F,OAE9C,KAAM,8EAER7B,KAAK4H,YAAcA,IAGrBD,EAASzK,UAAYlB,OAAOY,OAAOmD,EAAO7C,YACvB2K,YAAcF,EAKjCA,EAASzK,UAAU4K,iBAAmB,SAAU/I,GAS9C,MAAO,GAPFiB,KAAK7B,OAAOP,OAAS,IACrBoC,KAAK4H,YAAY,GAAG,GAAK5H,KAAK4H,YAAY,GAAG,KAC/C7I,EAAE,GAAKiB,KAAK4H,YAAY,GAAG,KAE1B5H,KAAK7B,OAAOR,MAAQ,IACnBqC,KAAK4H,YAAY,GAAG,GAAK5H,KAAK4H,YAAY,GAAG,KAC/C7I,EAAE,GAAKiB,KAAK4H,YAAY,GAAG,MAOhCD,EAASzK,UAAU6K,iBAAmB,SAAUhJ,GAW9C,MAAO,CATLiB,KAAK4H,YAAY,GAAG,IAClB5H,KAAK4H,YAAY,GAAG,GAAK5H,KAAK4H,YAAY,GAAG,KAC5C5H,KAAK7B,OAAOR,MAAQ,GACrBoB,EAAE,GAEJiB,KAAK4H,YAAY,GAAG,IAClB5H,KAAK4H,YAAY,GAAG,GAAK5H,KAAK4H,YAAY,GAAG,KAC5C5H,KAAK7B,OAAOP,OAAS,GACtBmB,EAAE,KAQR4I,EAASzK,UAAUkE,SAAW,SAAUC,EAAIC,EAAIC,GAC9C,IAAMyG,EAAKhI,KAAK8H,iBAAiBzG,GAC3B4G,EAAKjI,KAAK8H,iBAAiBxG,GACjCvB,EAAO7C,UAAUkE,SAAS3F,KAAKuE,KAAMgI,EAAIC,EAAI1G,IAQ/CoG,EAASzK,UAAUoG,aAAe,SAAUjC,EAAIC,EAAIiC,EAAIhC,GACtD,IAAMyG,EAAKhI,KAAK8H,iBAAiBzG,GAC3B4G,EAAKjI,KAAK8H,iBAAiBxG,GAC3B4G,EAAKlI,KAAK8H,iBAAiBvE,GACjCxD,EAAO7C,UAAUoG,aAAa7H,KAAKuE,KAAMgI,EAAIC,EAAIC,EAAI3G,IASvDoG,EAASzK,UAAUuG,SAAW,SAAUpC,EAAIC,EAAIiC,EAAIG,EAAInC,GACtD,IAAMyG,EAAKhI,KAAK8H,iBAAiBzG,GAC3B4G,EAAKjI,KAAK8H,iBAAiBxG,GAC3B4G,EAAKlI,KAAK8H,iBAAiBvE,GAC3B4E,EAAKnI,KAAK8H,iBAAiBpE,GACjC3D,EAAO7C,UAAUuG,SAAShI,KAAKuE,KAAMgI,EAAIC,EAAIC,EAAIC,EAAI5G,IAGvDoG,EAASzK,UAAUyG,WAAa,SAAU5E,EAAG3C,EAAGmF,GAE9C,IAAMwF,EAAI/G,KAAK8H,iBAAiB/I,GAC1BW,EAAIM,KAAK8H,iBAAiB,CAAC1L,EAAG,IAAI,GAAK4D,KAAK8H,iBAAiB,CAAC,EAAG,IAAI,GAC3E/H,EAAO7C,UAAUyG,WAAWlI,KAAKuE,KAAM+G,EAAGrH,EAAG6B,IAG/CoG,EAASzK,UAAUgB,UAAY,SAAUX,EAAKwB,GAC5CgB,EAAO7C,UAAUgB,UAAUzC,KAAKuE,KAAMzC,EAAKyC,KAAK8H,iBAAiB/I,KAGnE4I,EAASzK,UAAU+G,WAAa,SAAUlF,EAAGmF,EAAQC,GACnD,IAAM4C,EAAI/G,KAAK8H,iBAAiB/I,GAChCgB,EAAO7C,UAAU+G,WAAWxI,KAAKuE,KAAM+G,EAAG7C,EAAQC,IAIpDwD,EAASzK,UAAUkL,UAAY,SAAUC,GACvC,GAAqB,GAAjBA,EAAOxG,QAAoC,GAApBwG,EAAO,GAAGxG,QAAmC,GAApBwG,EAAO,GAAGxG,OAC5D,KAAM,8EAER7B,KAAK4H,YAAcS,GAGNV","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tela\"] = factory();\n\telse\n\t\troot[\"Tela\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const ImageIO = {\n  // empty object\n};\n\n/**\n * img : html image\n */\nImageIO.getImageCanvas = img => {\n  const canvasAux = document.createElement(\"canvas\");\n  canvasAux.width = img.width;\n  canvasAux.height = img.height;\n  const contextAux = canvasAux.getContext(\"2d\");\n  contextAux.fillStyle = \"rgba(0, 0, 0, 0)\";\n  contextAux.globalCompositeOperation = \"source-over\";\n  contextAux.fillRect(0, 0, canvasAux.width, canvasAux.height);\n  contextAux.drawImage(img, 0, 0);\n  return canvasAux;\n};\n\n/**\n * img : html image\n */\nImageIO.getDataFromImage = img => {\n  canvas = ImageIO.getImageCanvas(img);\n  return canvas.getContext(\"2d\").getImageData(0, 0, img.width, img.height);\n};\n\nImageIO.loadImage = src => {\n  const img = new Image();\n  img.src = src;\n  img.isReady = false;\n  img.onload = () => (img.isReady = true);\n  return img;\n};\n\nImageIO.generateImageReadyPredicate = img => () => img.isReady;\n\nexport default ImageIO;\n","import ImageIO from \"./ImageIO.js\";\n/*\n Canvas coordinates\n\n 0                  W-1\n +-------------> y\n |\n |\n |       *\n |\n |\n v x\n\n H-1\n */\n\n/*\nThe canvas data is an array of length colors(C) * width(W) * height(H). Is a 3D-array.\nThe index is a number in [0, C * W * H - 1].\nHaving (x, y, z) where z is the color axis, the formula to index the array is :\n\nf(x, y, z) = C * W * x + C * y + z.\n\nWhere x in [0, H - 1], y in [0, W - 1] and z in [0, C - 1].\n\nNote that f(H - 1, W - 1, C - 1) = C * W * H - 1.\n*/\n\n// Auxiliary functions\nfunction scale(u, r) {\n  var ans = [];\n  ans[0] = u[0] * r;\n  ans[1] = u[1] * r;\n  return ans;\n}\n\nfunction add(u, v) {\n  var ans = [];\n  ans[0] = u[0] + v[0];\n  ans[1] = u[1] + v[1];\n  return ans;\n}\n\nfunction floor(x) {\n  var ans = [];\n  ans[0] = Math.floor(x[0]);\n  ans[1] = Math.floor(x[1]);\n  return ans;\n}\n\nfunction diff(u, v) {\n  var ans = [];\n  ans[0] = u[0] - v[0];\n  ans[1] = u[1] - v[1];\n  return ans;\n}\n\nfunction dot(u, v) {\n  return u[0] * v[0] + u[1] * v[1];\n}\n\nfunction squareNorm(x) {\n  return dot(x, x);\n}\n\nfunction norm(x) {\n  return Math.sqrt(dot(x, x));\n}\n\nfunction min(u, v) {\n  var ans = [];\n  ans[0] = Math.min(u[0], v[0]);\n  ans[1] = Math.min(u[1], v[1]);\n  return ans;\n}\n\nfunction max(u, v) {\n  var ans = [];\n  ans[0] = Math.max(u[0], v[0]);\n  ans[1] = Math.max(u[1], v[1]);\n  return ans;\n}\n\n/**\n * return solution to : [ u_0 , h] x = z_0\n *\n *                       [ u_1,  0] y = z_1\n */\nfunction solve2by2UpperTriMatrix(u, h, z) {\n  var aux = z[1] / u[1];\n  return [aux, (-u[0] * aux + z[0]) / h];\n}\n/**\n * return solution to : [ u_0 , 0] x = z_0\n *\n *                       [ u_1,  w] y = z_1\n */\nfunction solve2by2LowerTriMatrix(u, w, z) {\n  var aux = z[0] / u[0];\n  return [aux, (-u[1] * aux + z[1]) / w];\n}\n\n// Canvas\nvar Canvas = function (canvas) {\n  this.canvas = canvas;\n  this.ctx = canvas.getContext(\"2d\");\n  this.image = this.ctx.getImageData(0, 0, canvas.width, canvas.height);\n  // width * height * 4 array of integers\n  this.imageData = this.image.data;\n};\n\n/**\n * Returns a two vector with Height as first coordinate and Width as second. [Height, Width].\n */\nCanvas.prototype.getSize = function () {\n  return [this.canvas.height, this.canvas.width];\n};\n\n/**\n *  Draw update image on canvas.\n */\nCanvas.prototype.paintImage = function () {\n  this.ctx.putImageData(this.image, 0, 0);\n};\n\nCanvas.prototype.getCanvas = function () {\n  return this.canvas;\n};\n\n/**\n * Clear Image with @rgba color.\n *\n * @param rgba\n */\nCanvas.prototype.clearImage = function (rgba) {\n  this.useCanvasCtx((canvas) => {\n    var size = canvas.getSize();\n    canvas.ctx.fillStyle =\n      \"rgba(\" + rgba[0] + \",\" + rgba[1] + \",\" + rgba[2] + \",\" + rgba[3] + \")\";\n    canvas.ctx.globalCompositeOperation = \"source-over\";\n    canvas.ctx.fillRect(0, 0, size[1], size[0]);\n  }, true);\n};\n\nCanvas.prototype.useCanvasCtx = function (lambda, isClearImage = false) {\n  if (!isClearImage) {\n    this.ctx.putImageData(this.image, 0, 0);\n  }\n  lambda(this);\n  this.image = this.ctx.getImageData(\n    0,\n    0,\n    this.canvas.width,\n    this.canvas.height\n  );\n  this.imageData = this.image.data;\n};\n\nCanvas.prototype.getImageIndex = function (x) {\n  return 4 * (this.canvas.width * x[0] + x[1]);\n};\n\nCanvas.prototype.getPxl = function (x) {\n  var index = this.getImageIndex(x);\n  return [\n    this.imageData[index],\n    this.imageData[index + 1],\n    this.imageData[index + 2],\n    this.imageData[index + 3],\n  ];\n};\n\nCanvas.prototype.drawPxl = function (x, rgb) {\n  var index = this.getImageIndex(x);\n  this.imageData[index] = rgb[0];\n  this.imageData[index + 1] = rgb[1];\n  this.imageData[index + 2] = rgb[2];\n  this.imageData[index + 3] = rgb[3];\n};\n\n/*\n * x1     :   2-dim array\n * x2     :   2-dim array\n * shader :   is a function that receives a 2-dim array and a line (array with 2 points) and returns a rgba 4-dim array\n */\nCanvas.prototype.drawLine = function (x1, x2, shader) {\n  // add points before clip\n  shader.points = [x1, x2];\n\n  // do clipping\n  var stack = [];\n  stack.push(x1);\n  stack.push(x2);\n  var inStack = [];\n  var outStack = [];\n  for (var i = 0; i < stack.length; i++) {\n    var x = stack[i];\n    if (\n      0 <= x[0] &&\n      x[0] < this.canvas.height &&\n      0 <= x[1] &&\n      x[1] < this.canvas.width\n    ) {\n      inStack.push(x);\n    } else {\n      outStack.push(x);\n    }\n  }\n  // both points are inside canvas\n  if (inStack.length == 2) {\n    this.drawLineInt(inStack[0], inStack[1], shader);\n    return;\n  }\n  //intersecting line with canvas\n  var intersectionSolutions = [];\n  var v = [x2[0] - x1[0], x2[1] - x1[1]];\n  // Let s \\in [0,1]\n  // line intersection with [0, 0]^T + [H - 1, 0]^T s\n  intersectionSolutions.push(\n    solve2by2UpperTriMatrix(v, -(this.canvas.height - 1), [-x1[0], -x1[1]])\n  );\n  // line intersection with [H - 1, 0]^T + [0, W - 1]^T s\n  intersectionSolutions.push(\n    solve2by2LowerTriMatrix(v, -(this.canvas.width - 1), [\n      this.canvas.height - 1 - x1[0],\n      -x1[1],\n    ])\n  );\n  // line intersection with [H - 1, W - 1]^T + [-(H - 1), 0]^T s\n  intersectionSolutions.push(\n    solve2by2UpperTriMatrix(v, this.canvas.height - 1, [\n      this.canvas.height - 1 - x1[0],\n      this.canvas.width - 1 - x1[1],\n    ])\n  );\n  // line intersection with [0, W - 1]^T + [0, -(W - 1)]^T s\n  intersectionSolutions.push(\n    solve2by2LowerTriMatrix(v, this.canvas.width - 1, [\n      -x1[0],\n      this.canvas.width - 1 - x1[1],\n    ])\n  );\n\n  var validIntersection = [];\n  for (var i = 0; i < intersectionSolutions.length; i++) {\n    var x = intersectionSolutions[i];\n    if (0 <= x[0] && x[0] <= 1 && 0 <= x[1] && x[1] <= 1) {\n      validIntersection.push(x);\n    }\n  }\n\n  if (validIntersection.length == 0) return;\n\n  //it can be shown that at this point there is at least one valid intersection.\n  if (inStack.length > 0) {\n    var p = [\n      x1[0] + validIntersection[0][0] * v[0],\n      x1[1] + validIntersection[0][0] * v[1],\n    ];\n    this.drawLineInt(inStack.pop(), p, shader);\n    return;\n  }\n\n  var p0 = [\n    x1[0] + validIntersection[0][0] * v[0],\n    x1[1] + validIntersection[0][0] * v[1],\n  ];\n  for (var i = 1; i < validIntersection.length; i++) {\n    var p = [\n      x1[0] + validIntersection[i][0] * v[0],\n      x1[1] + validIntersection[i][0] * v[1],\n    ];\n    var v = diff(p, p0);\n    if (dot(v, v) > 1e-3) {\n      this.drawLineInt(p0, p, shader);\n      return;\n    }\n  }\n  this.drawLineInt(p0, p0, shader);\n};\n\nCanvas.prototype.drawLineInt = function (x1, x2, shader) {\n  x1 = floor(x1);\n  x2 = floor(x2);\n\n  var index = [-1, 0, 1];\n\n  var n = index.length;\n  var nn = n * n;\n\n  var x = [];\n  x[0] = x1[0];\n  x[1] = x1[1];\n\n  var tangent = diff(x2, x1);\n  var normal = [];\n  normal[0] = -tangent[1];\n  normal[1] = tangent[0];\n\n  shader(x, shader.points, this);\n\n  while (x[0] !== x2[0] || x[1] !== x2[1]) {\n    var fmin = Number.MAX_VALUE;\n    var minDir = [];\n    for (var k = 0; k < nn; k++) {\n      var i = index[k % n];\n      var j = index[Math.floor(k / n)];\n\n      var nextX = add(x, [i, j]);\n\n      var v = diff(nextX, x1);\n      var f = Math.abs(dot(v, normal)) - dot(v, tangent);\n      if (fmin > f) {\n        fmin = f;\n        minDir = [i, j];\n      }\n    }\n\n    x = add(x, minDir);\n    shader(x, shader.points, this);\n  }\n  shader(x, shader.points, this);\n};\n\nCanvas.prototype.drawPolygon = function (\n  array,\n  shader,\n  isInsidePoly = Canvas.isInsidePolygon\n) {\n  let upperBox = [\n    [Number.MAX_VALUE, Number.MAX_VALUE],\n    [Number.MIN_VALUE, Number.MIN_VALUE],\n  ];\n  for (let i = 0; i < array.length; i++) {\n    upperBox[0] = min(array[i], upperBox[0]);\n    upperBox[1] = max(array[i], upperBox[1]);\n  }\n\n  let size = this.getSize();\n  let clampedSize = diff(size, [1, 1]);\n  let zeros = [0, 0];\n  upperBox[0] = floor(min(clampedSize, max(zeros, upperBox[0])));\n  upperBox[1] = floor(min(clampedSize, max(zeros, upperBox[1])));\n\n  for (var i = upperBox[0][0]; i < upperBox[1][0]; i++) {\n    for (var j = upperBox[0][1]; j < upperBox[1][1]; j++) {\n      var x = [i, j];\n      if (isInsidePoly(x, array)) {\n        shader(x, array, this);\n      }\n    }\n  }\n};\n\n/*\n * x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * shader :   is a function that receives a 2-dim array and a triangle (array with 3 points) and returns a rgba 4-dim array\n */\nCanvas.prototype.drawTriangle = function (x1, x2, x3, shader) {\n  var array = [x1, x2, x3];\n  this.drawPolygon(array, shader, Canvas.isInsideConvex);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * x4     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas.prototype.drawQuad = function (x1, x2, x3, x4, shader) {\n  this.drawPolygon([x1, x2, x3, x4], shader);\n};\n\nCanvas.prototype.drawImage = function (img, x) {\n  if (\"isReady\" in img && !img.isReady) return;\n  this.useCanvasCtx((canvas) => canvas.ctx.drawImage(img, x[1], x[0]));\n};\n\nCanvas.prototype.drawCircle = function (x, r, shader) {\n  var corner = scale([1, 1], r);\n  var upperBox = [diff(x, corner), add(x, corner)];\n  var size = this.getSize();\n  upperBox[0] = floor(min(diff(size, [1, 1]), max([0, 0], upperBox[0])));\n  upperBox[1] = floor(min(diff(size, [1, 1]), max([0, 0], upperBox[1])));\n  for (var i = upperBox[0][0]; i <= upperBox[1][0]; i++) {\n    for (var j = upperBox[0][1]; j <= upperBox[1][1]; j++) {\n      var p = [i, j];\n      if (this.isInsideCircle(p, x, r)) {\n        shader(p, [x, r], this);\n      }\n    }\n  }\n};\n\nCanvas.prototype.isInsideCircle = function (p, x, r) {\n  return squareNorm(diff(p, x)) <= r * r;\n};\n\nCanvas.prototype.addEventListener = function (key, lambda, useCapture) {\n  this.canvas.addEventListener(key, lambda, useCapture);\n};\n\nCanvas.prototype.drawString = function (x, string, contextShader) {\n  this.useCanvasCtx((canvas) => {\n    contextShader(canvas.ctx);\n    canvas.ctx.fillText(string, x[1], x[0]);\n  });\n};\n\n// Static functions\n\n// slower than isInsideConvex method\nCanvas.isInsidePolygon = function (x, array) {\n  var v = [];\n  var theta = 0;\n  var n = array.length;\n  for (var i = 0; i < n; i++) {\n    v[0] = diff(array[(i + 1) % n], x);\n    v[1] = diff(array[i], x);\n    theta += Math.acos(dot(v[0], v[1]) / (norm(v[0]) * norm(v[1])));\n  }\n  return Math.abs(theta - 2 * Math.PI) < 1e-3;\n};\n\nCanvas.isInsideConvex = function (x, array) {\n  var m = array.length;\n  var v = [];\n  var vDotN = [];\n  for (var i = 0; i < m; i++) {\n    v[i] = diff(array[(i + 1) % m], array[i]);\n    let n = [-v[i][1], v[i][0]];\n    let r = diff(x, array[i]);\n    vDotN[i] = dot(r, n);\n  }\n  let orientation = v[0][0] * v[1][1] - v[0][1] * v[1][0] > 0 ? 1 : -1;\n  for (var i = 0; i < m; i++) {\n    var myDot = vDotN[i] * orientation;\n    if (myDot < 0) return false;\n  }\n  return true;\n};\n\nCanvas.simpleShader = function (color) {\n  return (x, element, canvas) => canvas.drawPxl(x, color);\n};\n\nCanvas.colorShader = function (colors) {\n  var auxShader = (x, poly, canvas, alpha) => {\n    var interpolateColors = [0, 0, 0, 0];\n    for (var i = 0; i < poly.length; i++) {\n      interpolateColors[0] = interpolateColors[0] + colors[i][0] * alpha[i];\n      interpolateColors[1] = interpolateColors[1] + colors[i][1] * alpha[i];\n      interpolateColors[2] = interpolateColors[2] + colors[i][2] * alpha[i];\n      interpolateColors[3] = interpolateColors[3] + colors[i][3] * alpha[i];\n    }\n    canvas.drawPxl(x, interpolateColors);\n  };\n  return Canvas.interpolateTriangleShader(auxShader);\n};\n\nCanvas.interpolateQuadShader = function (shader) {\n  return function (x, quad, canvas) {\n    var t1 = [quad[0], quad[1], quad[2]];\n    var t2 = [quad[2], quad[3], quad[0]];\n    var alpha = Canvas.triangleBaryCoord(x, t1);\n    if (\n      alpha[0] > 0 &&\n      alpha[1] > 0 &&\n      alpha[2] > 0 &&\n      Math.abs(alpha[0] + alpha[1] + alpha[2] - 1) < 1e-10\n    ) {\n      shader(x, quad, canvas, [alpha[0], alpha[1], alpha[2], 0]);\n    } else {\n      alpha = Canvas.triangleBaryCoord(x, t2);\n      shader(x, quad, canvas, [alpha[2], 0, alpha[0], alpha[1]]);\n    }\n  };\n};\n\nCanvas.interpolateTriangleShader = function (shader) {\n  return (x, triangle, canvas) => {\n    const alpha = Canvas.triangleBaryCoord(x, triangle);\n    shader(x, triangle, canvas, alpha);\n  };\n};\n\nCanvas.interpolateLineShader = function (shader) {\n  return (x, line, canvas) => {\n    var v = diff(line[1], line[0]);\n    var z = diff(x, line[0]);\n    var vnorm = squareNorm(v);\n    var projection = dot(z, v);\n    var t = vnorm == 0.0 ? 0 : projection / vnorm;\n    shader(x, line, canvas, t);\n  };\n};\n\n/**\n * img: html loaded image.\n * quadTexCoord: [0, 1]^{2 * 4}, texture coordinates\n */\nCanvas.quadTextureShader = function (\n  img,\n  quadTexCoord,\n  interpolation = Canvas.bilinearInterpolation\n) {\n  let imageCache = null;\n  const imageShader = (x, quad, canvas, alpha) => {\n    if (!img.isReady || imageCache == null)\n      imageCache = new Canvas(ImageIO.getImageCanvas(img));\n    const imageCanvas = imageCache;\n    const imgSize = imageCanvas.getSize();\n    const interpolateTexCoord = [0, 0];\n    for (let i = 0; i < quadTexCoord.length; i++) {\n      interpolateTexCoord[0] =\n        interpolateTexCoord[0] + quadTexCoord[i][0] * alpha[i];\n      interpolateTexCoord[1] =\n        interpolateTexCoord[1] + quadTexCoord[i][1] * alpha[i];\n    }\n    var i = [\n      (1 - interpolateTexCoord[1]) * (imgSize[1] - 1),\n      (imgSize[0] - 1) * interpolateTexCoord[0],\n    ];\n    // bound coordinates\n    i = max([0, 0], min(diff([imgSize[0], imgSize[1]], [1, 1]), i));\n    // pxl lower corner\n    var j = floor(i);\n    var cornerColors = [\n      imageCanvas.getPxl(j),\n      imageCanvas.getPxl(add(j, [1, 0])),\n      imageCanvas.getPxl(add(j, [1, 1])),\n      imageCanvas.getPxl(add(j, [0, 1])),\n    ];\n    var finalColor = interpolation(cornerColors, diff(i, j));\n    canvas.drawPxl(x, finalColor);\n  };\n  return Canvas.interpolateQuadShader(imageShader);\n};\n\nCanvas.triangleCache = (() => {\n  const hashMap = [];\n  const size = 3;\n  return {\n    constains: (triangleHash) => hashMap[triangleHash % size] != undefined,\n    get: (triangleHash) => hashMap[triangleHash % size],\n    set: (triangleHash, value) => (hashMap[triangleHash % size] = value),\n  };\n})(); //{triangle: null, u: [], v:[], det:null, hash:null}\n\nCanvas.triangleHash = (triangle) => {\n  const array = [\n    triangle[0][0],\n    triangle[1][0],\n    triangle[2][0],\n    triangle[0][1],\n    triangle[1][1],\n    triangle[2][1],\n  ];\n  return array.reduce((h, x) => 31 * h + x, 1);\n};\n\nCanvas.triangleBaryCoord = function (x, triangle) {\n  const hash = Canvas.triangleHash(triangle);\n  const y = [x[0] - triangle[0][0], x[1] - triangle[0][1]];\n  if (!Canvas.triangleCache.constains(hash)) {\n    const u = [\n      triangle[1][0] - triangle[0][0],\n      triangle[1][1] - triangle[0][1],\n    ];\n    const v = [\n      triangle[2][0] - triangle[0][0],\n      triangle[2][1] - triangle[0][1],\n    ];\n    const det = u[0] * v[1] - u[1] * v[0];\n    Canvas.triangleCache.set(hash, {\n      triangle: triangle,\n      u: u.map((x) => x / det),\n      v: v.map((x) => x / det),\n      det: det,\n      hash: hash,\n    });\n  }\n  const cache = Canvas.triangleCache.get(hash);\n  const u = cache.u;\n  const v = cache.v;\n  const det = cache.det;\n  if (det == 0) return [0, 0, 0];\n  var alpha = [v[1] * y[0] - v[0] * y[1], u[0] * y[1] - u[1] * y[0]];\n  return [1 - alpha[0] - alpha[1], alpha[0], alpha[1]];\n};\n\n/**\n * values \\in R^{k * 4}\n * x \\in [0,1]^2\n */\nCanvas.bilinearInterpolation = function (values, x) {\n  var acc = [];\n  for (var k = 0; k < values.length; k++) {\n    var f03 = values[0][k] + (values[3][k] - values[0][k]) * x[1];\n    var f12 = values[1][k] + (values[2][k] - values[1][k]) * x[1];\n    var f = f03 + (f12 - f03) * x[0];\n    acc.push(f);\n  }\n  return acc;\n};\n/**\n * size: is an array with width and height of a HTML5 Canvas.\n * domId: DOM element where the canvas will be added\n *\n * returns Canvas object from the generated html canvas.\n */\nCanvas.createCanvas = function (size, domId) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"width\", size[0]);\n  canvas.setAttribute(\"height\", size[1]);\n  document.getElementById(domId).appendChild(canvas);\n  return canvas;\n};\n\nexport default Canvas;\n","import Canvas from \"./Canvas.js\";\n\n//Note that we can switch from heritage to composition, think about that\n\n// cameraSpace : 2-dim array with two 2-dim arrays that are intervals [a,b] | a < b\nvar Canvas2D = function (canvas, cameraSpace) {\n  Canvas.call(this, canvas);\n  if (\n    cameraSpace.length != 2 ||\n    (cameraSpace[0].length != 2 && cameraSpace[1].length != 2)\n  ) {\n    throw \"camera space must be 2-dim array with 2-dim arrays representing an interval\";\n  }\n  this.cameraSpace = cameraSpace;\n};\n\nCanvas2D.prototype = Object.create(Canvas.prototype);\nCanvas2D.prototype.constructor = Canvas2D;\n\n/* x : 2-dim array in camera space coordinates\n * returns : 2-dim array in integer coordinates\n */\nCanvas2D.prototype.integerTransform = function (x) {\n  var xint =\n    (-(this.canvas.height - 1) /\n      (this.cameraSpace[1][1] - this.cameraSpace[1][0])) *\n    (x[1] - this.cameraSpace[1][1]);\n  var yint =\n    ((this.canvas.width - 1) /\n      (this.cameraSpace[0][1] - this.cameraSpace[0][0])) *\n    (x[0] - this.cameraSpace[0][0]);\n  return [xint, yint];\n};\n\n/* x : 2-dim array in integer coordinates\n * returns : 2-dim array in camera space coordinates\n */\nCanvas2D.prototype.inverseTransform = function (x) {\n  var xt =\n    this.cameraSpace[0][0] +\n    ((this.cameraSpace[0][1] - this.cameraSpace[0][0]) /\n      (this.canvas.width - 1)) *\n      x[1];\n  var yt =\n    this.cameraSpace[1][1] -\n    ((this.cameraSpace[1][1] - this.cameraSpace[1][0]) /\n      (this.canvas.height - 1)) *\n      x[0];\n  return [xt, yt];\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawLine = function (x1, x2, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  Canvas.prototype.drawLine.call(this, y1, y2, shader);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawTriangle = function (x1, x2, x3, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  const y3 = this.integerTransform(x3);\n  Canvas.prototype.drawTriangle.call(this, y1, y2, y3, shader);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * x4     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawQuad = function (x1, x2, x3, x4, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  const y3 = this.integerTransform(x3);\n  const y4 = this.integerTransform(x4);\n  Canvas.prototype.drawQuad.call(this, y1, y2, y3, y4, shader);\n};\n\nCanvas2D.prototype.drawCircle = function (x, r, shader) {\n  // it assumes squared canvas, for now ...\n  const y = this.integerTransform(x);\n  const z = this.integerTransform([r, 0])[1] - this.integerTransform([0, 0])[1];\n  Canvas.prototype.drawCircle.call(this, y, z, shader);\n};\n\nCanvas2D.prototype.drawImage = function (img, x) {\n  Canvas.prototype.drawImage.call(this, img, this.integerTransform(x));\n};\n\nCanvas2D.prototype.drawString = function (x, string, contextShader) {\n  const y = this.integerTransform(x);\n  Canvas.prototype.drawString.call(this, y, string, contextShader);\n};\n\n// camera : 2-dim array with two 2-dim arrays that are intervals [a,b] | a < b\nCanvas2D.prototype.setCamera = function (camera) {\n  if (camera.length != 2 || (camera[0].length != 2 && camera[1].length != 2)) {\n    throw \"camera space must be 2-dim array with 2-dim arrays representing an interval\";\n  }\n  this.cameraSpace = camera;\n};\n\nexport default Canvas2D;\n"],"sourceRoot":""}