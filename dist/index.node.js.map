{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/helpers/esm/slicedToArray\"","webpack:///external \"@babel/runtime/helpers/esm/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/esm/defineProperty\"","webpack:///external \"@babel/runtime/helpers/esm/createClass\"","webpack:///external \"@babel/runtime/helpers/esm/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/esm/toConsumableArray\"","webpack:///external \"@babel/runtime/helpers/esm/inherits\"","webpack:///external \"@babel/runtime/helpers/esm/get\"","webpack:///external \"@babel/runtime/helpers/esm/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/esm/wrapNativeSuper\"","webpack:///external \"@babel/runtime/helpers/esm/assertThisInitialized\"","webpack:///./src/Canvas_old/main/ImageIO.js","webpack:///./src/Canvas_old/main/Canvas.js","webpack:///./src/Canvas_old/main/Canvas2D.js","webpack:///./src/Color/main/Color.js","webpack:///./src/Matrix/main/Matrix.js","webpack:///./src/BBox/main/BBox.js","webpack:///./src/Canvas/main/Canvas.js","webpack:///./src/Utils/main/Utils.js","webpack:///./src/Animator/main/Animator.js","webpack:///./src/Canvas2d/main/Canvas2d.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","ImageIO","img","canvasAux","document","createElement","width","height","contextAux","getContext","fillStyle","globalCompositeOperation","fillRect","drawImage","canvas","getImageCanvas","getImageData","src","Image","isReady","onload","add","u","v","ans","floor","x","Math","diff","dot","squareNorm","norm","sqrt","min","max","solve2by2UpperTriMatrix","h","z","aux","solve2by2LowerTriMatrix","w","hashMap","Canvas","this","ctx","image","imageData","data","getSize","paintImage","putImageData","getCanvas","clearImage","rgba","useCanvasCtx","size","lambda","isClearImage","getImageIndex","getPxl","index","drawPxl","rgb","drawLine","x1","x2","shader","points","stack","push","inStack","outStack","length","intersectionSolutions","validIntersection","drawLineInt","pop","p0","nn","tangent","normal","fmin","Number","MAX_VALUE","minDir","k","j","f","abs","drawPolygon","array","isInsidePoly","isInsidePolygon","upperBox","MIN_VALUE","clampedSize","zeros","drawTriangle","x3","isInsideConvex","drawQuad","x4","drawCircle","corner","scale","isInsideCircle","addEventListener","useCapture","drawString","string","contextShader","fillText","theta","acos","PI","vDotN","orientation","simpleShader","color","element","colorShader","colors","interpolateTriangleShader","poly","alpha","interpolateColors","interpolateQuadShader","quad","t1","t2","triangleBaryCoord","triangle","interpolateLineShader","line","vnorm","projection","quadTextureShader","quadTexCoord","interpolation","bilinearInterpolation","imageCache","imageShader","imageCanvas","imgSize","interpolateTexCoord","cornerColors","finalColor","triangleCache","constains","triangleHash","undefined","set","reduce","hash","y","det","map","cache","values","acc","f03","createCanvas","domId","setAttribute","getElementById","appendChild","Canvas2D","cameraSpace","constructor","integerTransform","inverseTransform","y1","y2","y3","y4","setCamera","camera","Color","red","green","blue","Uint8Array","random","ofRGBA","getIndexFromCoord","_","getCoordFromIndex","MatrixBuilder","_size","MatrixError","index2Key","Float64Array","indexer","keys","forEach","split","Matrix","RowBuilder","rows","dim","cols","indexF","ColBuilder","shape","matrix","prod","getCoord","identity","e","binaryLambda","mRows","mCols","op","a","b","real","precision","sub","error","builder","build","addCol","addRow","en","matrixBuilder","colBuilder","of","vec","e0","e1","ZERO","e2","Error","BBox","isEmpty","center","diagonal","box","EMPTY","newMin","newMax","every","vector","actionByTypes","type","action","equals","point","vec2","imgBuffer","CanvasException","start","end","_clipLine","toArray","p1","p2","_drawConvexPolygon","arrayOfPoints","canvasBox","boundingBox","ofPoint","finalBox","inter","xMin","yMin","xMax","yMax","_isInsideConvex","vi","bbox","pointStack","collidesWith","inPoint","outPoint","_getLineCanvasIntersection","boundary","solution","_solveLowTriMatrix","_solveUpTriMatrix","validIntersections","v1","v2","av1","f1","f2","av2","CanvasBuilder","_width","_height","_canvas","perf","performance","now","testBuilder","canvasBuilder","canvasFactory","title","timeInMillis","domTest","testTitle","innerText","getDom","timeDom","body","Animator","state","next","doWhile","requestAnimeId","requestAnimationFrame","stop","play","cancelAnimationFrame","AnimatorBuilder","_state","_next","_end","some","Canvas2d","forwardCoord","inverseCoord","startPos","endPos","q0","q1","q2","minX","minY","maxX","maxY","Canvas2dBuilder","_camera","canvasBase"],"mappings":"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","file":"index.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = require(\"@babel/runtime/helpers/esm/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/esm/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/esm/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/esm/createClass\");","module.exports = require(\"@babel/runtime/helpers/esm/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/esm/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/esm/inherits\");","module.exports = require(\"@babel/runtime/helpers/esm/get\");","module.exports = require(\"@babel/runtime/helpers/esm/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/esm/wrapNativeSuper\");","module.exports = require(\"@babel/runtime/helpers/esm/assertThisInitialized\");","const ImageIO = {\n  // empty object\n};\n\n/**\n * img : html image\n */\nImageIO.getImageCanvas = img => {\n  const canvasAux = document.createElement(\"canvas\");\n  canvasAux.width = img.width;\n  canvasAux.height = img.height;\n  const contextAux = canvasAux.getContext(\"2d\");\n  contextAux.fillStyle = \"rgba(0, 0, 0, 0)\";\n  contextAux.globalCompositeOperation = \"source-over\";\n  contextAux.fillRect(0, 0, canvasAux.width, canvasAux.height);\n  contextAux.drawImage(img, 0, 0);\n  return canvasAux;\n};\n\n/**\n * img : html image\n */\nImageIO.getDataFromImage = img => {\n  canvas = ImageIO.getImageCanvas(img);\n  return canvas.getContext(\"2d\").getImageData(0, 0, img.width, img.height);\n};\n\nImageIO.loadImage = src => {\n  const img = new Image();\n  img.src = src;\n  img.isReady = false;\n  img.onload = () => (img.isReady = true);\n  return img;\n};\n\nImageIO.generateImageReadyPredicate = img => () => img.isReady;\n\nexport default ImageIO;\n","import ImageIO from \"./ImageIO\";\n/*\n Canvas coordinates\n\n 0                  W-1\n +-------------> y\n |\n |\n |       *\n |\n |\n v x\n\n H-1\n */\n\n/*\n\nThe point xe_1 + ye_2 corresponds to a point in the middle of a pxl.\n\nThe canvas data is an array of length colors(C) * width(W) * height(H). Is a 3D-array.\nThe index is a number in [0, C * W * H - 1].\nHaving (x, y, z) where z is the color axis, the formula to index the array is :\n\nf(x, y, z) = C * W * x + C * y + z.\n\nWhere x in [0, H - 1], y in [0, W - 1] and z in [0, C - 1].\n\nNote that f(H - 1, W - 1, C - 1) = C * W * H - 1.\n*/\n\n// Auxiliary functions\nfunction scale(u, r) {\n  var ans = [];\n  ans[0] = u[0] * r;\n  ans[1] = u[1] * r;\n  return ans;\n}\n\nfunction add(u, v) {\n  var ans = [];\n  ans[0] = u[0] + v[0];\n  ans[1] = u[1] + v[1];\n  return ans;\n}\n\nfunction floor(x) {\n  var ans = [];\n  ans[0] = Math.floor(x[0]);\n  ans[1] = Math.floor(x[1]);\n  return ans;\n}\n\nfunction diff(u, v) {\n  var ans = [];\n  ans[0] = u[0] - v[0];\n  ans[1] = u[1] - v[1];\n  return ans;\n}\n\nfunction dot(u, v) {\n  return u[0] * v[0] + u[1] * v[1];\n}\n\nfunction squareNorm(x) {\n  return dot(x, x);\n}\n\nfunction norm(x) {\n  return Math.sqrt(dot(x, x));\n}\n\nfunction min(u, v) {\n  var ans = [];\n  ans[0] = Math.min(u[0], v[0]);\n  ans[1] = Math.min(u[1], v[1]);\n  return ans;\n}\n\nfunction max(u, v) {\n  var ans = [];\n  ans[0] = Math.max(u[0], v[0]);\n  ans[1] = Math.max(u[1], v[1]);\n  return ans;\n}\n\n/**\n * return solution to : [ u_0 , h] x = z_0\n *\n *                       [ u_1,  0] y = z_1\n */\nfunction solve2by2UpperTriMatrix(u, h, z) {\n  var aux = z[1] / u[1];\n  return [aux, (-u[0] * aux + z[0]) / h];\n}\n/**\n * return solution to : [ u_0 , 0] x = z_0\n *\n *                       [ u_1,  w] y = z_1\n */\nfunction solve2by2LowerTriMatrix(u, w, z) {\n  var aux = z[0] / u[0];\n  return [aux, (-u[1] * aux + z[1]) / w];\n}\n\n// Canvas\nvar Canvas = function (canvas) {\n  this.canvas = canvas;\n  this.ctx = canvas.getContext(\"2d\");\n  this.image = this.ctx.getImageData(0, 0, canvas.width, canvas.height);\n  // width * height * 4 array of integers\n  this.imageData = this.image.data;\n};\n\n/**\n * Returns a two vector with Height as first coordinate and Width as second. [Height, Width].\n */\nCanvas.prototype.getSize = function () {\n  return [this.canvas.height, this.canvas.width];\n};\n\n/**\n *  Draw update image on canvas.\n */\nCanvas.prototype.paintImage = function () {\n  this.ctx.putImageData(this.image, 0, 0);\n};\n\nCanvas.prototype.getCanvas = function () {\n  return this.canvas;\n};\n\n/**\n * Clear Image with @rgba color.\n *\n * @param rgba\n */\nCanvas.prototype.clearImage = function (rgba) {\n  this.useCanvasCtx((canvas) => {\n    var size = canvas.getSize();\n    canvas.ctx.fillStyle =\n      \"rgba(\" + rgba[0] + \",\" + rgba[1] + \",\" + rgba[2] + \",\" + rgba[3] + \")\";\n    canvas.ctx.globalCompositeOperation = \"source-over\";\n    canvas.ctx.fillRect(0, 0, size[1], size[0]);\n  }, true);\n};\n\nCanvas.prototype.useCanvasCtx = function (lambda, isClearImage = false) {\n  if (!isClearImage) {\n    this.ctx.putImageData(this.image, 0, 0);\n  }\n  lambda(this);\n  this.image = this.ctx.getImageData(\n    0,\n    0,\n    this.canvas.width,\n    this.canvas.height\n  );\n  this.imageData = this.image.data;\n};\n\nCanvas.prototype.getImageIndex = function (x) {\n  return 4 * (this.canvas.width * x[0] + x[1]);\n};\n\nCanvas.prototype.getPxl = function (x) {\n  var index = this.getImageIndex(x);\n  return [\n    this.imageData[index],\n    this.imageData[index + 1],\n    this.imageData[index + 2],\n    this.imageData[index + 3],\n  ];\n};\n\nCanvas.prototype.drawPxl = function (x, rgb) {\n  var index = this.getImageIndex(x);\n  this.imageData[index] = rgb[0];\n  this.imageData[index + 1] = rgb[1];\n  this.imageData[index + 2] = rgb[2];\n  this.imageData[index + 3] = rgb[3];\n};\n\n/*\n * x1     :   2-dim array\n * x2     :   2-dim array\n * shader :   is a function that receives a 2-dim array and a line (array with 2 points) and returns a rgba 4-dim array\n */\nCanvas.prototype.drawLine = function (x1, x2, shader) {\n  // add points before clip\n  shader.points = [x1, x2];\n\n  // do clipping\n  var stack = [];\n  stack.push(x1);\n  stack.push(x2);\n  var inStack = [];\n  var outStack = [];\n  for (var i = 0; i < stack.length; i++) {\n    var x = stack[i];\n    if (\n      0 <= x[0] &&\n      x[0] < this.canvas.height &&\n      0 <= x[1] &&\n      x[1] < this.canvas.width\n    ) {\n      inStack.push(x);\n    } else {\n      outStack.push(x);\n    }\n  }\n  // both points are inside canvas\n  if (inStack.length == 2) {\n    this.drawLineInt(inStack[0], inStack[1], shader);\n    return;\n  }\n  //intersecting line with canvas\n  var intersectionSolutions = [];\n  var v = [x2[0] - x1[0], x2[1] - x1[1]];\n  // Let s \\in [0,1]\n  // line intersection with [0, 0]^T + [H - 1, 0]^T s\n  intersectionSolutions.push(\n    solve2by2UpperTriMatrix(v, -(this.canvas.height - 1), [-x1[0], -x1[1]])\n  );\n  // line intersection with [H - 1, 0]^T + [0, W - 1]^T s\n  intersectionSolutions.push(\n    solve2by2LowerTriMatrix(v, -(this.canvas.width - 1), [\n      this.canvas.height - 1 - x1[0],\n      -x1[1],\n    ])\n  );\n  // line intersection with [H - 1, W - 1]^T + [-(H - 1), 0]^T s\n  intersectionSolutions.push(\n    solve2by2UpperTriMatrix(v, this.canvas.height - 1, [\n      this.canvas.height - 1 - x1[0],\n      this.canvas.width - 1 - x1[1],\n    ])\n  );\n  // line intersection with [0, W - 1]^T + [0, -(W - 1)]^T s\n  intersectionSolutions.push(\n    solve2by2LowerTriMatrix(v, this.canvas.width - 1, [\n      -x1[0],\n      this.canvas.width - 1 - x1[1],\n    ])\n  );\n\n  var validIntersection = [];\n  for (var i = 0; i < intersectionSolutions.length; i++) {\n    var x = intersectionSolutions[i];\n    if (0 <= x[0] && x[0] <= 1 && 0 <= x[1] && x[1] <= 1) {\n      validIntersection.push(x);\n    }\n  }\n\n  if (validIntersection.length == 0) return;\n\n  //it can be shown that at this point there is at least one valid intersection.\n  if (inStack.length > 0) {\n    var p = [\n      x1[0] + validIntersection[0][0] * v[0],\n      x1[1] + validIntersection[0][0] * v[1],\n    ];\n    this.drawLineInt(inStack.pop(), p, shader);\n    return;\n  }\n\n  var p0 = [\n    x1[0] + validIntersection[0][0] * v[0],\n    x1[1] + validIntersection[0][0] * v[1],\n  ];\n  for (var i = 1; i < validIntersection.length; i++) {\n    var p = [\n      x1[0] + validIntersection[i][0] * v[0],\n      x1[1] + validIntersection[i][0] * v[1],\n    ];\n    var v = diff(p, p0);\n    if (dot(v, v) > 1e-3) {\n      this.drawLineInt(p0, p, shader);\n      return;\n    }\n  }\n  this.drawLineInt(p0, p0, shader);\n};\n\nCanvas.prototype.drawLineInt = function (x1, x2, shader) {\n  x1 = floor(x1);\n  x2 = floor(x2);\n\n  var index = [-1, 0, 1];\n\n  var n = index.length;\n  var nn = n * n;\n\n  var x = [];\n  x[0] = x1[0];\n  x[1] = x1[1];\n\n  var tangent = diff(x2, x1);\n  var normal = [];\n  normal[0] = -tangent[1];\n  normal[1] = tangent[0];\n\n  shader(x, shader.points, this);\n\n  while (x[0] !== x2[0] || x[1] !== x2[1]) {\n    var fmin = Number.MAX_VALUE;\n    var minDir = [];\n    for (var k = 0; k < nn; k++) {\n      var i = index[k % n];\n      var j = index[Math.floor(k / n)];\n\n      var nextX = add(x, [i, j]);\n\n      var v = diff(nextX, x1);\n      var f = Math.abs(dot(v, normal)) - dot(v, tangent);\n      if (fmin > f) {\n        fmin = f;\n        minDir = [i, j];\n      }\n    }\n\n    x = add(x, minDir);\n    shader(x, shader.points, this);\n  }\n  shader(x, shader.points, this);\n};\n\nCanvas.prototype.drawPolygon = function (\n  array,\n  shader,\n  isInsidePoly = Canvas.isInsidePolygon\n) {\n  let upperBox = [\n    [Number.MAX_VALUE, Number.MAX_VALUE],\n    [Number.MIN_VALUE, Number.MIN_VALUE],\n  ];\n  for (let i = 0; i < array.length; i++) {\n    upperBox[0] = min(array[i], upperBox[0]);\n    upperBox[1] = max(array[i], upperBox[1]);\n  }\n\n  let size = this.getSize();\n  let clampedSize = diff(size, [1, 1]);\n  let zeros = [0, 0];\n  upperBox[0] = floor(min(clampedSize, max(zeros, upperBox[0])));\n  upperBox[1] = floor(min(clampedSize, max(zeros, upperBox[1])));\n\n  for (var i = upperBox[0][0]; i < upperBox[1][0]; i++) {\n    for (var j = upperBox[0][1]; j < upperBox[1][1]; j++) {\n      var x = [i, j];\n      if (isInsidePoly(x, array)) {\n        shader(x, array, this);\n      }\n    }\n  }\n};\n\n/*\n * x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * shader :   is a function that receives a 2-dim array and a triangle (array with 3 points) and returns a rgba 4-dim array\n */\nCanvas.prototype.drawTriangle = function (x1, x2, x3, shader) {\n  var array = [x1, x2, x3];\n  this.drawPolygon(array, shader, Canvas.isInsideConvex);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * x4     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas.prototype.drawQuad = function (x1, x2, x3, x4, shader) {\n  this.drawPolygon([x1, x2, x3, x4], shader);\n};\n\nCanvas.prototype.drawImage = function (img, x) {\n  if (\"isReady\" in img && !img.isReady) return;\n  this.useCanvasCtx((canvas) => canvas.ctx.drawImage(img, x[1], x[0]));\n};\n\nCanvas.prototype.drawCircle = function (x, r, shader) {\n  var corner = scale([1, 1], r);\n  var upperBox = [diff(x, corner), add(x, corner)];\n  var size = this.getSize();\n  upperBox[0] = floor(min(diff(size, [1, 1]), max([0, 0], upperBox[0])));\n  upperBox[1] = floor(min(diff(size, [1, 1]), max([0, 0], upperBox[1])));\n  for (var i = upperBox[0][0]; i <= upperBox[1][0]; i++) {\n    for (var j = upperBox[0][1]; j <= upperBox[1][1]; j++) {\n      var p = [i, j];\n      if (this.isInsideCircle(p, x, r)) {\n        shader(p, [x, r], this);\n      }\n    }\n  }\n};\n\nCanvas.prototype.isInsideCircle = function (p, x, r) {\n  return squareNorm(diff(p, x)) <= r * r;\n};\n\nCanvas.prototype.addEventListener = function (key, lambda, useCapture) {\n  this.canvas.addEventListener(key, lambda, useCapture);\n};\n\nCanvas.prototype.drawString = function (x, string, contextShader) {\n  this.useCanvasCtx((canvas) => {\n    contextShader(canvas.ctx);\n    canvas.ctx.fillText(string, x[1], x[0]);\n  });\n};\n\n// Static functions\n\n// slower than isInsideConvex method\nCanvas.isInsidePolygon = function (x, array) {\n  var v = [];\n  var theta = 0;\n  var n = array.length;\n  for (var i = 0; i < n; i++) {\n    v[0] = diff(array[(i + 1) % n], x);\n    v[1] = diff(array[i], x);\n    theta += Math.acos(dot(v[0], v[1]) / (norm(v[0]) * norm(v[1])));\n  }\n  return Math.abs(theta - 2 * Math.PI) < 1e-3;\n};\n\nCanvas.isInsideConvex = function (x, array) {\n  var m = array.length;\n  var v = [];\n  var vDotN = [];\n  for (var i = 0; i < m; i++) {\n    v[i] = diff(array[(i + 1) % m], array[i]);\n    let n = [-v[i][1], v[i][0]];\n    let r = diff(x, array[i]);\n    vDotN[i] = dot(r, n);\n  }\n  let orientation = v[0][0] * v[1][1] - v[0][1] * v[1][0] > 0 ? 1 : -1;\n  for (var i = 0; i < m; i++) {\n    var myDot = vDotN[i] * orientation;\n    if (myDot < 0) return false;\n  }\n  return true;\n};\n\nCanvas.simpleShader = function (color) {\n  return (x, element, canvas) => canvas.drawPxl(x, color);\n};\n\nCanvas.colorShader = function (colors) {\n  var auxShader = (x, poly, canvas, alpha) => {\n    var interpolateColors = [0, 0, 0, 0];\n    for (var i = 0; i < poly.length; i++) {\n      interpolateColors[0] = interpolateColors[0] + colors[i][0] * alpha[i];\n      interpolateColors[1] = interpolateColors[1] + colors[i][1] * alpha[i];\n      interpolateColors[2] = interpolateColors[2] + colors[i][2] * alpha[i];\n      interpolateColors[3] = interpolateColors[3] + colors[i][3] * alpha[i];\n    }\n    canvas.drawPxl(x, interpolateColors);\n  };\n  return Canvas.interpolateTriangleShader(auxShader);\n};\n\nCanvas.interpolateQuadShader = function (shader) {\n  return function (x, quad, canvas) {\n    var t1 = [quad[0], quad[1], quad[2]];\n    var t2 = [quad[2], quad[3], quad[0]];\n    var alpha = Canvas.triangleBaryCoord(x, t1);\n    if (\n      alpha[0] > 0 &&\n      alpha[1] > 0 &&\n      alpha[2] > 0 &&\n      Math.abs(alpha[0] + alpha[1] + alpha[2] - 1) < 1e-10\n    ) {\n      shader(x, quad, canvas, [alpha[0], alpha[1], alpha[2], 0]);\n    } else {\n      alpha = Canvas.triangleBaryCoord(x, t2);\n      shader(x, quad, canvas, [alpha[2], 0, alpha[0], alpha[1]]);\n    }\n  };\n};\n\nCanvas.interpolateTriangleShader = function (shader) {\n  return (x, triangle, canvas) => {\n    const alpha = Canvas.triangleBaryCoord(x, triangle);\n    shader(x, triangle, canvas, alpha);\n  };\n};\n\nCanvas.interpolateLineShader = function (shader) {\n  return (x, line, canvas) => {\n    var v = diff(line[1], line[0]);\n    var z = diff(x, line[0]);\n    var vnorm = squareNorm(v);\n    var projection = dot(z, v);\n    var t = vnorm == 0.0 ? 0 : projection / vnorm;\n    shader(x, line, canvas, t);\n  };\n};\n\n/**\n * img: html loaded image.\n * quadTexCoord: [0, 1]^{2 * 4}, texture coordinates\n */\nCanvas.quadTextureShader = function (\n  img,\n  quadTexCoord,\n  interpolation = Canvas.bilinearInterpolation\n) {\n  let imageCache = null;\n  const imageShader = (x, quad, canvas, alpha) => {\n    if (!img.isReady || imageCache == null)\n      imageCache = new Canvas(ImageIO.getImageCanvas(img));\n    const imageCanvas = imageCache;\n    const imgSize = imageCanvas.getSize();\n    const interpolateTexCoord = [0, 0];\n    for (let i = 0; i < quadTexCoord.length; i++) {\n      interpolateTexCoord[0] =\n        interpolateTexCoord[0] + quadTexCoord[i][0] * alpha[i];\n      interpolateTexCoord[1] =\n        interpolateTexCoord[1] + quadTexCoord[i][1] * alpha[i];\n    }\n    var i = [\n      (1 - interpolateTexCoord[1]) * (imgSize[1] - 1),\n      (imgSize[0] - 1) * interpolateTexCoord[0],\n    ];\n    // bound coordinates\n    i = max([0, 0], min(diff([imgSize[0], imgSize[1]], [1, 1]), i));\n    // pxl lower corner\n    var j = floor(i);\n    var cornerColors = [\n      imageCanvas.getPxl(j),\n      imageCanvas.getPxl(add(j, [1, 0])),\n      imageCanvas.getPxl(add(j, [1, 1])),\n      imageCanvas.getPxl(add(j, [0, 1])),\n    ];\n    var finalColor = interpolation(cornerColors, diff(i, j));\n    canvas.drawPxl(x, finalColor);\n  };\n  return Canvas.interpolateQuadShader(imageShader);\n};\n\nCanvas.triangleCache = (() => {\n  const hashMap = [];\n  const size = 3;\n  return {\n    constains: (triangleHash) => hashMap[triangleHash % size] != undefined,\n    get: (triangleHash) => hashMap[triangleHash % size],\n    set: (triangleHash, value) => (hashMap[triangleHash % size] = value),\n  };\n})(); //{triangle: null, u: [], v:[], det:null, hash:null}\n\nCanvas.triangleHash = (triangle) => {\n  const array = [\n    triangle[0][0],\n    triangle[1][0],\n    triangle[2][0],\n    triangle[0][1],\n    triangle[1][1],\n    triangle[2][1],\n  ];\n  return array.reduce((h, x) => 31 * h + x, 1);\n};\n\nCanvas.triangleBaryCoord = function (x, triangle) {\n  const hash = Canvas.triangleHash(triangle);\n  const y = [x[0] - triangle[0][0], x[1] - triangle[0][1]];\n  if (!Canvas.triangleCache.constains(hash)) {\n    const u = [\n      triangle[1][0] - triangle[0][0],\n      triangle[1][1] - triangle[0][1],\n    ];\n    const v = [\n      triangle[2][0] - triangle[0][0],\n      triangle[2][1] - triangle[0][1],\n    ];\n    const det = u[0] * v[1] - u[1] * v[0];\n    Canvas.triangleCache.set(hash, {\n      triangle: triangle,\n      u: u.map((x) => x / det),\n      v: v.map((x) => x / det),\n      det: det,\n      hash: hash,\n    });\n  }\n  const cache = Canvas.triangleCache.get(hash);\n  const u = cache.u;\n  const v = cache.v;\n  const det = cache.det;\n  if (det == 0) return [0, 0, 0];\n  var alpha = [v[1] * y[0] - v[0] * y[1], u[0] * y[1] - u[1] * y[0]];\n  return [1 - alpha[0] - alpha[1], alpha[0], alpha[1]];\n};\n\n/**\n * values \\in R^{k * 4}\n * x \\in [0,1]^2\n */\nCanvas.bilinearInterpolation = function (values, x) {\n  var acc = [];\n  for (var k = 0; k < values.length; k++) {\n    var f03 = values[0][k] + (values[3][k] - values[0][k]) * x[1];\n    var f12 = values[1][k] + (values[2][k] - values[1][k]) * x[1];\n    var f = f03 + (f12 - f03) * x[0];\n    acc.push(f);\n  }\n  return acc;\n};\n/**\n * size: is an array with width and height of a HTML5 Canvas.\n * domId: DOM element where the canvas will be added\n *\n * returns Canvas object from the generated html canvas.\n */\nCanvas.createCanvas = function (size, domId) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"width\", size[0]);\n  canvas.setAttribute(\"height\", size[1]);\n  document.getElementById(domId).appendChild(canvas);\n  return canvas;\n};\n\nexport default Canvas;\n","import Canvas from \"./Canvas\";\n\n//Note that we can switch from heritage to composition, think about that\n\n// cameraSpace : 2-dim array with two 2-dim arrays that are intervals [a,b] | a < b\nvar Canvas2D = function (canvas, cameraSpace) {\n  Canvas.call(this, canvas);\n  if (\n    cameraSpace.length != 2 ||\n    (cameraSpace[0].length != 2 && cameraSpace[1].length != 2)\n  ) {\n    throw \"camera space must be 2-dim array with 2-dim arrays representing an interval\";\n  }\n  this.cameraSpace = cameraSpace;\n};\n\nCanvas2D.prototype = Object.create(Canvas.prototype);\nCanvas2D.prototype.constructor = Canvas2D;\n\n/* x : 2-dim array in camera space coordinates\n * returns : 2-dim array in integer coordinates\n */\nCanvas2D.prototype.integerTransform = function (x) {\n  var xint =\n    (-(this.canvas.height - 1) /\n      (this.cameraSpace[1][1] - this.cameraSpace[1][0])) *\n    (x[1] - this.cameraSpace[1][1]);\n  var yint =\n    ((this.canvas.width - 1) /\n      (this.cameraSpace[0][1] - this.cameraSpace[0][0])) *\n    (x[0] - this.cameraSpace[0][0]);\n  return [xint, yint];\n};\n\n/* x : 2-dim array in integer coordinates\n * returns : 2-dim array in camera space coordinates\n */\nCanvas2D.prototype.inverseTransform = function (x) {\n  var xt =\n    this.cameraSpace[0][0] +\n    ((this.cameraSpace[0][1] - this.cameraSpace[0][0]) /\n      (this.canvas.width - 1)) *\n      x[1];\n  var yt =\n    this.cameraSpace[1][1] -\n    ((this.cameraSpace[1][1] - this.cameraSpace[1][0]) /\n      (this.canvas.height - 1)) *\n      x[0];\n  return [xt, yt];\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawLine = function (x1, x2, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  Canvas.prototype.drawLine.call(this, y1, y2, shader);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawTriangle = function (x1, x2, x3, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  const y3 = this.integerTransform(x3);\n  Canvas.prototype.drawTriangle.call(this, y1, y2, y3, shader);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * x4     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawQuad = function (x1, x2, x3, x4, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  const y3 = this.integerTransform(x3);\n  const y4 = this.integerTransform(x4);\n  Canvas.prototype.drawQuad.call(this, y1, y2, y3, y4, shader);\n};\n\nCanvas2D.prototype.drawCircle = function (x, r, shader) {\n  // it assumes squared canvas, for now ...\n  const y = this.integerTransform(x);\n  const z = this.integerTransform([r, 0])[1] - this.integerTransform([0, 0])[1];\n  Canvas.prototype.drawCircle.call(this, y, z, shader);\n};\n\nCanvas2D.prototype.drawImage = function (img, x) {\n  Canvas.prototype.drawImage.call(this, img, this.integerTransform(x));\n};\n\nCanvas2D.prototype.drawString = function (x, string, contextShader) {\n  const y = this.integerTransform(x);\n  Canvas.prototype.drawString.call(this, y, string, contextShader);\n};\n\n// camera : 2-dim array with two 2-dim arrays that are intervals [a,b] | a < b\nCanvas2D.prototype.setCamera = function (camera) {\n  if (camera.length != 2 || (camera[0].length != 2 && camera[1].length != 2)) {\n    throw \"camera space must be 2-dim array with 2-dim arrays representing an interval\";\n  }\n  this.cameraSpace = camera;\n};\n\nexport default Canvas2D;\n","export default class Color {\n  /**\n   *\n   * @param {*} rgba: Uint8Array\n   */\n  constructor(rgba) {\n    this.rgba = rgba;\n  }\n\n  getRGBA() {\n    return this.rgba;\n  }\n\n  static ofRGBA(red = 0, green = 0, blue = 0, alpha = 255) {\n    const rgba = new Uint8Array(4);\n    rgba[0] = red;\n    rgba[1] = green;\n    rgba[2] = blue;\n    rgba[3] = alpha;\n    return new Color(rgba);\n  }\n\n  static random() {\n    const r = () => Math.random() * 256;\n    return Color.ofRGBA(r(), r(), r(), r());\n  }\n\n  get red() {\n    return this.rgba[0];\n  }\n\n  get green() {\n    return this.rgba[1];\n  }\n\n  get blue() {\n    return this.rgba[2];\n  }\n\n  get alpha() {\n    return this.rgba[3];\n  }\n}\n","//========================================================================================\n/*                                                                                      *\n *                              MATRIX UTILS (order counts)                             *\n *                                                                                      */\n//========================================================================================\n\nconst getIndexFromCoord = (_, m) => (i, j) => j + i * m;\nconst getCoordFromIndex = (_, m) => (k) => [k / m, k % m].map(Math.floor);\nconst index2Key = (i, j) => `${i},${j}`;\nconst key2Index = (k) => k.split(\",\").map(Number);\n\nclass MatrixBuilder {\n  constructor() {\n    this._size = [];\n    this.data = {};\n  }\n\n  size(n, m = 1) {\n    this._size = [n, m];\n    return this;\n  }\n\n  set(i, j, v) {\n    if (this._size.length === 0)\n      throw new MatrixError(\"Setting value to empty matrix\");\n    this.data[index2Key(i, j)] = v;\n    return this;\n  }\n\n  build() {\n    const [n, m] = this._size;\n    const data = new Float64Array(n * m);\n    const indexer = getIndexFromCoord(n, m);\n    Object.keys(this.data).forEach((key) => {\n      data[indexer(...key2Index(key))] = this.data[key];\n    });\n    return new Matrix(data, this._size);\n  }\n}\n\nclass RowBuilder {\n  constructor() {\n    this.rows = [];\n    this.dim = 0;\n  }\n\n  addRow(...array) {\n    if (this.dim === 0) {\n      this.dim = array.length;\n    }\n    if (this.dim !== array.length)\n      throw new MatrixError(\n        `Added row of different dimension, actual dim is ${this.dim}`\n      );\n    this.rows.push(array);\n    return this;\n  }\n\n  build() {\n    if (this.rows.length > 0) return this.#buildWithRows();\n    throw new MatrixError(\"Building empty matrix\");\n  }\n\n  #buildWithRows() {\n    const rows = this.rows.length;\n    const cols = this.dim;\n    const data = new Float64Array(rows * cols);\n    const indexF = getIndexFromCoord(rows, cols);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        data[indexF(i, j)] = this.rows[i][j];\n      }\n    }\n    return new Matrix(data, [rows, cols]);\n  }\n}\n\nclass ColBuilder {\n  constructor() {\n    this.cols = [];\n    this.dim = 0;\n  }\n\n  addCol(...array) {\n    if (this.dim === 0) {\n      this.dim = array.length;\n    }\n    if (this.dim !== array.length)\n      throw new MatrixError(\n        `Added col of different dimension, actual dim is ${this.dim}`\n      );\n    this.cols.push(array);\n    return this;\n  }\n\n  build() {\n    if (this.cols.length > 0) return this.#buildWithCols();\n    throw new MatrixError(\"Building empty matrix\");\n  }\n\n  #buildWithCols() {\n    const rows = this.dim;\n    const cols = this.cols.length;\n    const data = new Float64Array(rows * cols);\n    const indexF = getIndexFromCoord(rows, cols);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        data[indexF(i, j)] = this.cols[j][i];\n      }\n    }\n    return new Matrix(data, [rows, cols]);\n  }\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                        MATRIX                                        *\n *                                                                                      */\n//========================================================================================\n\nexport default class Matrix {\n  /**\n   *\n   * @param {*} data: Float64Array; Matrix data in major row format\n   * @param {*} shape: 2-array [rows,columns]\n   */\n  constructor(data, shape) {\n    this.data = data;\n    this.shape = shape;\n  }\n\n  get rows() {\n    return this.shape[0];\n  }\n\n  get cols() {\n    return this.shape[1];\n  }\n\n  get(i = 0, j = 0) {\n    const [_, cols] = this.shape;\n    return this.data[j + i * cols];\n  }\n\n  prod(matrix) {\n    if (this.cols !== matrix.rows) {\n      throw new MatrixError(\n        `Incompatible product size. Left ${this.shape}, right ${matrix.shape}`\n      );\n    }\n    const n = this.rows;\n    const m = this.cols;\n    const l = matrix.cols;\n    const prod = new Float64Array(n * l);\n    const indexer = getIndexFromCoord(n, l);\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < l; j++) {\n        let acc = 0;\n        for (let k = 0; k < m; k++) {\n          acc += this.get(i, k) * matrix.get(k, j);\n        }\n        prod[indexer(i, j)] = acc;\n      }\n    }\n\n    return new Matrix(prod, [n, l]);\n  }\n\n  dot(matrix) {\n    if (this.rows !== matrix.rows)\n      throw new MatrixError(\n        `Incompatible product size. Left ${this.shape}, right ${matrix.shape}`\n      );\n    const n = this.rows;\n    const m = this.cols;\n    const l = matrix.cols;\n    const prod = new Float64Array(m * l);\n    const indexer = getIndexFromCoord(m, l);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < l; j++) {\n        let acc = 0;\n        for (let k = 0; k < n; k++) {\n          acc += this.get(k, i) * matrix.get(k, j);\n        }\n        prod[indexer(i, j)] = acc;\n      }\n    }\n\n    return new Matrix(prod, [m, l]);\n  }\n\n  /**\n   *\n   * @param {*} lambda: (number, i, j) => number\n   * @returns Matrix\n   */\n  map(lambda = (x) => x) {\n    const getCoord = getCoordFromIndex(...this.shape);\n    return new Matrix(\n      this.data.map((x, k) => {\n        const [i, j] = getCoord(k);\n        return lambda(x, i, j);\n      }),\n      this.shape\n    );\n  }\n\n  /**\n   *\n   * @param {*} lambda (accumulator, number, i, j) => number\n   * @param {*} identity\n   */\n  reduce(lambda, identity = 0) {\n    const getCoord = getCoordFromIndex(...this.shape);\n    return this.data.reduce((e, x, k) => {\n      const [i, j] = getCoord(k);\n      return lambda(e, x, i, j);\n    }, identity);\n  }\n\n  fold = this.reduce;\n\n  /**\n   *\n   * @param {*} binaryLambda: (number,number) => number\n   */\n  op(matrix, binaryLambda) {\n    const [rows, cols] = this.shape;\n    const [mRows, mCols] = matrix.shape;\n    if (rows !== mRows || cols !== mCols)\n      throw new MatrixError(\"Matrix must be of same size\");\n    return new Matrix(\n      this.data.map((x, i) => binaryLambda(x, matrix.data[i])),\n      this.shape\n    );\n  }\n\n  add(matrix) {\n    return this.op(matrix, (a, b) => a + b);\n  }\n\n  sub(matrix) {\n    return this.op(matrix, (a, b) => a - b);\n  }\n\n  mul(matrix) {\n    return this.op(matrix, (a, b) => a * b);\n  }\n\n  div(matrix) {\n    return this.op(matrix, (a, b) => a / b);\n  }\n\n  scale(real) {\n    return this.map((x) => x * real);\n  }\n\n  norm() {\n    let acc = 0;\n    for (let i = 0; i < this.data.length; i++) {\n      acc += this.data[i] * this.data[i];\n    }\n    return Math.sqrt(acc);\n  }\n\n  length = this.norm;\n\n  equals(matrix, precision = 1e-6) {\n    if (!(matrix instanceof Matrix)) return false;\n    try {\n      return this.sub(matrix).length() < precision;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  toArray() {\n    return this.data;\n  }\n\n  static id = (n, m = n) => {\n    const en = Matrix.e(n);\n    let matrixBuilder = Matrix.colBuilder();\n    for (let i = 0; i < m; i++) {\n      matrixBuilder = matrixBuilder.addCol(...en(i).data);\n    }\n    return matrixBuilder.build();\n  };\n\n  static e = (n) => (i) => {\n    return new Matrix(\n      new Float64Array(n).map((_, j) => (i === j ? 1 : 0)),\n      [n, 1]\n    );\n  };\n\n  static dx = (n) => (i) => {\n    return new Matrix(\n      new Float64Array(n).map((_, j) => (i === j ? 1 : 0)),\n      [1, n]\n    );\n  };\n\n  static ZERO(n, m = 1) {\n    return Matrix.builder().size(n, m).build();\n  }\n\n  static builder() {\n    return new MatrixBuilder();\n  }\n\n  static rowBuilder() {\n    return new RowBuilder();\n  }\n\n  static colBuilder() {\n    return new ColBuilder();\n  }\n\n  static vec(...array) {\n    return new ColBuilder().addCol(...array).build();\n  }\n\n  static cov(...array) {\n    return new RowBuilder().addRow(...array).build();\n  }\n\n  static vec2 = {\n    of: (x = 0, y = 0) => Matrix.vec(x, y),\n    e0: Matrix.vec(1, 0),\n    e1: Matrix.vec(0, 1),\n    ZERO: Matrix.ZERO(2, 1),\n  };\n\n  static vec3 = {\n    of: (x = 0, y = 0, z = 0) => Matrix.vec(x, y, z),\n    e0: Matrix.vec(1, 0, 0),\n    e1: Matrix.vec(0, 1, 0),\n    e2: Matrix.vec(0, 0, 1),\n    ZERO: Matrix.ZERO(3, 1),\n  };\n}\n\nexport class MatrixError extends Error {}\n","import Matrix from \"../../Matrix/main/Matrix\";\n\nexport default class BBox {\n  constructor(min, max) {\n    this.isEmpty = min === undefined || max === undefined;\n    if (this.isEmpty) return this;\n    this.min = min.op(max, Math.min);\n    this.max = max.op(min, Math.max);\n    this.center = min.add(max).scale(1 / 2);\n    this.diagonal = max.sub(min);\n  }\n  /**\n   * Union of boxes\n   * @param {*} box\n   */\n  add(box) {\n    if (this === BBox.EMPTY) return box;\n    const { min, max } = this;\n    return new BBox(min.op(box.min, Math.min), max.op(box.max, Math.max));\n  }\n\n  union = this.add;\n\n  /**\n   * Intersection of boxes\n   * @param {*} box\n   */\n  sub(box) {\n    if (this === BBox.EMPTY) return BBox.EMPTY;\n    const { min, max } = this;\n    const newMin = min.op(box.min, Math.max);\n    const newMax = max.op(box.max, Math.min);\n    const newDiag = newMax.sub(newMin);\n    const isAllPositive = newDiag.data.every((x) => x >= 0);\n    return !isAllPositive ? BBox.EMPTY : new BBox(newMin, newMax);\n  }\n\n  inter = this.sub;\n\n  move(vector) {\n    return new BBox(this.min.add(vector), this.max.add(vector));\n  }\n\n  collidesWith(box) {\n    const actionByTypes = [\n      { type: BBox, action: () => !this.sub(box).isEmpty },\n      { type: Matrix, action: () => !this.sub(new BBox(box, box)).isEmpty },\n    ];\n    for (let i = 0; i < actionByTypes.length; i++) {\n      if (box instanceof actionByTypes[i].type) {\n        return actionByTypes[i].action();\n      }\n    }\n  }\n\n  equals(box) {\n    if (!(box instanceof BBox)) return false;\n    if (this == BBox.EMPTY) return true;\n    return this.min.equals(box.min) && this.max.equals(box.max);\n  }\n\n  static ofPoint(...array) {\n    const point = Matrix.vec(...array);\n    return new BBox(point, point);\n  }\n  static EMPTY = new BBox();\n}\n","import Color from \"../../Color/main/Color\";\nimport Matrix from \"../../Matrix/main/Matrix\";\nimport BBox from \"../../BBox/main/BBox\";\nconst { vec2 } = Matrix;\n/*\n Canvas coordinates\n\n 0                  W-1\n +-------------> y\n |\n |\n |       *\n |\n |\n v x\n\n H-1\n */\n\n/*\n\nThe point xe_1 + ye_2 corresponds to a point in the middle of a pxl.\n\nThe canvas data is an array of length colors(C) * width(W) * height(H). Is a 3D-array.\nThe index is a number in [0, C * W * H - 1].\nHaving (x, y, z) where z is the color axis, the formula to index the array is :\n\nf(x, y, z) = C * W * x + C * y + z.\n\nWhere x in [0, H - 1], y in [0, W - 1] and z in [0, C - 1].\n\nNote that f(H - 1, W - 1, C - 1) = C * W * H - 1.\n*/\n\nexport default class Canvas {\n  /**\n   *\n   * @param {*} canvas: DOM element of type canvas\n   */\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.image = this.ctx.getImageData(0, 0, canvas.width, canvas.height);\n    // width * height * 4 array of integers\n    this.imgBuffer = this.image.data;\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  getDom = this.getCanvas;\n\n  get width() {\n    return this.canvas.width;\n  }\n\n  get height() {\n    return this.canvas.height;\n  }\n  //========================================================================================\n  /*                                                                                      *\n   *                                 side effects function                                *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   * Update color of canvas\n   * @param {*} color: Color\n   */\n  fill(color = Color.ofRGBA(255, 255, 255)) {\n    this.ctx.fillStyle = `rgba(${color.red}, ${color.green}, ${color.blue}, ${\n      color.alpha / 255.0\n    })`;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.image = this.ctx.getImageData(\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height\n    );\n    this.imgBuffer = this.image.data;\n    return this;\n  }\n\n  /**\n   *\n   * @param {*} lambda: (Color,x:number,y:number) => Color\n   */\n  map(lambda = () => {}) {\n    const n = this.imgBuffer.length;\n    const { width: w } = this.canvas;\n    for (let i = 0; i < n; i += 4) {\n      const x = Math.floor(i / (4 * w));\n      const y = Math.floor(i / 4) % w;\n      const color = lambda(\n        Color.ofRGBA(\n          this.imgBuffer[i],\n          this.imgBuffer[i + 1],\n          this.imgBuffer[i + 2],\n          this.imgBuffer[i + 3]\n        ),\n        x,\n        y\n      );\n      this.imgBuffer[i] = color.red;\n      this.imgBuffer[i + 1] = color.green;\n      this.imgBuffer[i + 2] = color.blue;\n      this.imgBuffer[i + 3] = color.alpha;\n    }\n    return this;\n  }\n\n  /**\n   * Return pxl color at (i,j)\n   * @param {*} i: integer \\in [0,H-1]\n   * @param {*} j: integer \\in [0,W-1]\n   * @returns color\n   */\n  getPxl(i, j) {\n    const { width, height } = this.canvas;\n    if ((i < 0 || i >= height) && (j < 0 || j >= width))\n      return new CanvasException(\"pxl out of bounds\");\n    const index = 4 * (i * width + j);\n    return Color.ofRGBA(\n      this.imgBuffer[index],\n      this.imgBuffer[index + 1],\n      this.imgBuffer[index + 2],\n      this.imgBuffer[index + 3]\n    );\n  }\n\n  /**\n   * Set pxl color at (i,j)\n   * @param {*} i: integer \\in [0,H-1]\n   * @param {*} j: integer \\in [0,W-1]\n   * @param {*} color\n   */\n  setPxl(i, j, color) {\n    const { width, height } = this.canvas;\n    if ((i < 0 || i >= height) && (j < 0 || j >= width)) return this;\n    const index = 4 * (i * width + j);\n    this.imgBuffer[index] = color.red;\n    this.imgBuffer[index + 1] = color.green;\n    this.imgBuffer[index + 2] = color.blue;\n    this.imgBuffer[index + 3] = color.alpha;\n    return this;\n  }\n\n  /**\n   *\n   * @param {*} start: 2-Array\n   * @param {*} end: 2-Array\n   * @param {}\n   */\n  drawLine(start, end, shader = (x, y) => Color.ofRGBA(0, 0, 0)) {\n    // faster than using vec2\n    const { width, _ } = this.canvas;\n    const line = this._clipLine(start, end).map((x) => x.toArray());\n    const [p0, p1] = line;\n    const v = [p1[0] - p0[0], p1[1] - p0[1]];\n    const n = Math.abs(v[0]) + Math.abs(v[1]);\n    for (let k = 0; k < n; k++) {\n      const s = k / n;\n      const x = [p0[0] + v[0] * s, p0[1] + v[1] * s].map(Math.floor);\n      const [i, j] = x;\n      const index = 4 * (i * width + j);\n      const color = shader(i, j);\n      this.imgBuffer[index] = color.red;\n      this.imgBuffer[index + 1] = color.green;\n      this.imgBuffer[index + 2] = color.blue;\n      this.imgBuffer[index + 3] = color.alpha;\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param {*} p0 : 2-array<number>\n   * @param {*} p1 : 2-array<number>\n   * @param {*} p2 : 2-array<number>\n   * @param {*} shader : (number, number) => Color\n   * @returns\n   */\n  drawTriangle(p0, p1, p2, shader = (x, y) => Color.ofRGBA(0, 0, 0)) {\n    return this._drawConvexPolygon([p0, p1, p2], shader);\n  }\n\n  paint() {\n    this.ctx.putImageData(this.image, 0, 0);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Auxiliary functions                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   *\n   * @param {*} arrayOfPoints : Array<2-Array<Number>>\n   * @param {*} shader : (x,y) => color\n   * @returns\n   */\n  _drawConvexPolygon(arrayOfPoints, shader) {\n    const { width, height } = this.canvas;\n    const canvasBox = new BBox(vec2.ZERO, vec2.of(height, width));\n    let boundingBox = BBox.EMPTY;\n    arrayOfPoints.forEach((x) => {\n      boundingBox = boundingBox.add(BBox.ofPoint(...x));\n    });\n    const finalBox = canvasBox.inter(boundingBox);\n    const [xMin, yMin] = finalBox.min.toArray();\n    const [xMax, yMax] = finalBox.max.toArray();\n\n    for (let i = xMin; i < xMax; i++) {\n      for (let j = yMin; j < yMax; j++) {\n        if (this._isInsideConvex([i, j], arrayOfPoints)) {\n          const color = shader(i, j);\n          const index = 4 * (i * width + j);\n          this.imgBuffer[index] = color.red;\n          this.imgBuffer[index + 1] = color.green;\n          this.imgBuffer[index + 2] = color.blue;\n          this.imgBuffer[index + 3] = color.alpha;\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param {*} x: 2-Array<Number>\n   * @param {*} points: Array<2-Array<Number>>\n   * @returns\n   */\n  _isInsideConvex(x, points) {\n    const m = points.length;\n    const v = [];\n    const vDotN = [];\n    for (let i = 0; i < m; i++) {\n      const p1 = points[(i + 1) % m];\n      const p0 = points[i];\n      v[i] = [p1[0] - p0[0], p1[1] - p0[1]];\n      const vi = v[i];\n      const n = [-vi[1], vi[0]];\n      const r = [x[0] - p0[0], x[1] - p0[1]];\n      vDotN[i] = r[0] * n[0] + r[1] * n[1];\n    }\n    let orientation = v[0][0] * v[1][1] - v[0][1] * v[1][0] >= 0 ? 1 : -1;\n    for (let i = 0; i < m; i++) {\n      const myDot = vDotN[i] * orientation;\n      if (myDot < 0) return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param {*} start: 2-Array<Number>\n   * @param {*} end: 2-Array<Number>\n   * @returns 2-Array<2-Array<Number>>\n   */\n  _clipLine(start, end) {\n    const { width, height } = this.canvas;\n    const bbox = new BBox(vec2.ZERO, vec2.of(height, width));\n    const pointStack = [start, end].map((x) => vec2.of(...x));\n    const inStack = [];\n    const outStack = [];\n    for (let i = 0; i < pointStack.length; i++) {\n      const p = pointStack[i];\n      if (bbox.collidesWith(p)) {\n        inStack.push(p);\n      } else {\n        outStack.push(p);\n      }\n    }\n    // both points are inside\n    if (inStack.length >= 2) {\n      return inStack;\n    }\n    // one of them is inside\n    if (inStack.length === 1) {\n      const [inPoint] = inStack;\n      const [outPoint] = outStack;\n      return [inPoint, ...this._getLineCanvasIntersection(inPoint, outPoint)];\n    }\n    // both points are outside,need to intersect the boundary\n    return this._getLineCanvasIntersection(...outStack);\n  }\n\n  /**\n   *\n   * @param {*} start: vec2(matrix)\n   * @param {*} end: vec2(matrix)\n   */\n  _getLineCanvasIntersection(start, end) {\n    const { width, height } = this.canvas;\n    const v = end.sub(start);\n    // point and direction of boundary\n    const boundary = [\n      [vec2.ZERO, vec2.of(height, 0)],\n      [vec2.of(height, 0), vec2.of(0, width)],\n      [vec2.of(height, width), vec2.of(-height, 0)],\n      [vec2.of(0, width), vec2.of(0, -width)],\n    ];\n    const intersectionSolutions = [];\n    boundary.forEach(([s, d]) => {\n      if (d.get(0) === 0) {\n        const solution = this._solveLowTriMatrix(v, -d.get(1), s.sub(start));\n        solution !== undefined && intersectionSolutions.push(solution);\n      } else {\n        const solution = this._solveUpTriMatrix(v, -d.get(0), s.sub(start));\n        solution !== undefined && intersectionSolutions.push(solution);\n      }\n    });\n    const validIntersections = [];\n    intersectionSolutions.forEach((solution) => {\n      const [x, y] = [solution.get(0), solution.get(1)];\n      if (0 <= x && x <= 1 && 0 <= y && y <= 1) {\n        validIntersections.push(solution);\n      }\n    });\n    if (validIntersections.length === 0) return [];\n    return validIntersections.map((solution) => {\n      const t = solution.get(0);\n      return start.add(v.scale(t));\n    });\n  }\n\n  /**\n   *\n   * @param {*} v: vec2\n   * @param {*} a: number\n   * @param {*} f: vec2\n   * @returns vec2\n   */\n  _solveLowTriMatrix(v, a, f) {\n    const v1 = v.get(0);\n    const v2 = v.get(1);\n    const av1 = a * v1;\n    if (av1 === 0 || v1 === 0) return undefined;\n    const f1 = f.get(0);\n    const f2 = f.get(1);\n    return vec2.of(f1 / v1, (f2 * v1 - v2 * f1) / av1);\n  }\n\n  /**\n   *\n   * @param {*} v: vec2\n   * @param {*} a: number\n   * @param {*} f: vec2\n   * @returns vec2\n   */\n  _solveUpTriMatrix(v, a, f) {\n    const v1 = v.get(0);\n    const v2 = v.get(1);\n    const av2 = a * v2;\n    if (av2 === 0 || v2 === 0) return undefined;\n    const f1 = f.get(0);\n    const f2 = f.get(1);\n    return vec2.of(f2 / v2, (f1 * v2 - v1 * f2) / av2);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static builder() {\n    return new CanvasBuilder();\n  }\n}\n\nexport class CanvasBuilder {\n  _canvas = document.createElement(\"canvas\");\n  _width = 500;\n  _height = 500;\n  constructor() {}\n\n  width(width = this._width) {\n    this._width = width;\n    return this;\n  }\n\n  height(height = this._height) {\n    this._height = height;\n    return this;\n  }\n\n  build() {\n    this._canvas.setAttribute(\"width\", this._width);\n    this._canvas.setAttribute(\"height\", this._height);\n    return new Canvas(this._canvas);\n  }\n}\n\nexport class CanvasException extends Error {}\n","export const perf = (lambda) => {\n  const t = performance.now();\n  lambda();\n  return performance.now() - t;\n};\n\n/**\n *\n * @param {*} canvasBuilder : () => canvas\n * @returns\n */\nexport const testBuilder =\n  (canvasBuilder = canvasFactory) =>\n  /**\n   * Unit test maker\n   * @param {*} title\n   * @param {*} lambda: (canvas) => {}\n   */\n  (title, lambda = () => {}) => {\n    let canvas = canvasBuilder();\n    const timeInMillis = perf(() => lambda(canvas));\n    const domTest = document.createElement(\"div\");\n    const testTitle = document.createElement(\"h3\");\n    testTitle.innerText = title;\n    domTest.appendChild(testTitle);\n    domTest.appendChild(canvas.getDom());\n    const timeDom = document.createElement(\"h4\");\n    timeDom.innerText = `Test took ${timeInMillis}ms`;\n    domTest.appendChild(timeDom);\n    document.body.appendChild(domTest);\n  };\n\nconst canvasFactory = () => Canvas.builder().width(500).height(500).build();\n","export default class Animator {\n  constructor(state, next, doWhile) {\n    this.state = state;\n    this.next = next;\n    this.while = doWhile;\n    this.requestAnimeId = null;\n  }\n\n  play() {\n    this.requestAnimeId = requestAnimationFrame(() => {\n      if (!this.while(this.state)) return this.stop();\n      this.state = this.next(this.state);\n      this.play();\n    });\n    return this;\n  }\n\n  stop() {\n    cancelAnimationFrame(this.requestAnimeId);\n    return this;\n  }\n\n  static builder() {\n    return new AnimatorBuilder();\n  }\n}\n\nclass AnimatorBuilder {\n  constructor() {\n    this._state = null;\n    this._next = null;\n    this._end = null;\n  }\n\n  initialState(state) {\n    this._state = state;\n    return this;\n  }\n\n  nextState(next) {\n    this._next = next;\n    return this;\n  }\n\n  while(end) {\n    this._end = end;\n    return this;\n  }\n\n  build() {\n    const someAreEmpty = [this._state, this._next, this._end].some(\n      (x) => x === null || x === undefined\n    );\n    if (someAreEmpty) throw new Error(\"Animator properties are missing\");\n    return new Animator(this._state, this._next, this._end);\n  }\n}\n","import BBox from \"../../BBox/main/BBox\";\nimport Canvas, { CanvasBuilder } from \"../../Canvas/main/Canvas\";\nimport Matrix from \"../../Matrix/main/Matrix\";\nconst { vec2 } = Matrix;\n\nexport default class Canvas2d extends Canvas {\n  constructor(canvas, camera) {\n    super(canvas);\n    this.camera = camera;\n  }\n\n  setCamera(bbox) {\n    this.camera = bbox;\n  }\n\n  map(lambda = () => {}) {\n    return super.map((c, i, j) => {\n      const [x, y] = this.forwardCoord(i, j);\n      return lambda(c, x, y);\n    });\n  }\n\n  getPxl(x, y) {\n    const [i, j] = this.inverseCoord(x, y);\n    return super.getPxl(i, j);\n  }\n\n  setPxl(x, y, color) {\n    const [i, j] = this.inverseCoord(x, y);\n    return super.setPxl(i, j, color);\n  }\n\n  drawLine(start, end, shader) {\n    const startPos = this.inverseCoord(...start);\n    const endPos = this.inverseCoord(...end);\n    return super.drawLine(startPos, endPos, shader);\n  }\n\n  drawTriangle(p0, p1, p2, shader) {\n    const q0 = this.inverseCoord(...p0);\n    const q1 = this.inverseCoord(...p1);\n    const q2 = this.inverseCoord(...p2);\n    return super.drawTriangle(q0, q1, q2, shader);\n  }\n\n  /**\n   * Map from camera coord to canvas coord\n   */\n  inverseCoord(x, y) {\n    const { min, max } = this.camera;\n    const { width, height } = this.canvas;\n    const [minX, minY] = min.data;\n    const [maxX, maxY] = max.data;\n    return [\n      (-(y - maxY) * (height - 1)) / (maxY - minY),\n      ((x - minX) * (width - 1)) / (maxX - minX),\n    ].map(Math.floor);\n  }\n\n  /**\n   * Map from canvas coord to camera coord\n   */\n  forwardCoord(i, j) {\n    const { min, max } = this.camera;\n    const { width, height } = this.canvas;\n    const [minX, minY] = min.data;\n    const [maxX, maxY] = max.data;\n    return [\n      minX + ((maxX - minX) * j) / (width - 1),\n      maxY + ((minY - maxY) * i) / (height - 1),\n    ];\n  }\n\n  static builder() {\n    return new Canvas2dBuilder();\n  }\n}\n\nexport class Canvas2dBuilder extends CanvasBuilder {\n  _camera = new BBox(vec2.of(-1, -1), vec2.of(1, 1));\n\n  camera(bbox = this._camera) {\n    this._camera = bbox;\n    return this;\n  }\n\n  build() {\n    const canvasBase = super.build();\n    return new Canvas2d(canvasBase.canvas, this._camera);\n  }\n}\n"],"sourceRoot":""}