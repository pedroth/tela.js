{"version":3,"file":"index.node.js","mappings":"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","sources":["webpack://tela.js/./src/Animator/main/Animator.js","webpack://tela.js/./src/BBox/main/BBox.js","webpack://tela.js/./src/Canvas/main/Canvas.js","webpack://tela.js/./src/Canvas2d/main/Canvas2d.js","webpack://tela.js/./src/Canvas_old/main/Canvas.js","webpack://tela.js/./src/Canvas_old/main/Canvas2D.js","webpack://tela.js/./src/Canvas_old/main/ImageIO.js","webpack://tela.js/./src/Color/main/Color.js","webpack://tela.js/./src/Matrix/main/Matrix.js","webpack://tela.js/./src/Utils/main/Utils.js","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/assertThisInitialized\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/classCallCheck\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/createClass\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/defineProperty\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/get\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/getPrototypeOf\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/inherits\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/possibleConstructorReturn\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/slicedToArray\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/toConsumableArray\"","webpack://tela.js/external commonjs \"@babel/runtime/helpers/esm/wrapNativeSuper\"","webpack://tela.js/webpack/bootstrap","webpack://tela.js/webpack/runtime/compat get default export","webpack://tela.js/webpack/runtime/define property getters","webpack://tela.js/webpack/runtime/hasOwnProperty shorthand","webpack://tela.js/webpack/runtime/make namespace object","webpack://tela.js/./src/index.js"],"sourcesContent":["export default class Animator {\n  constructor(state, next, doWhile) {\n    this.state = state;\n    this.next = next;\n    this.while = doWhile;\n    this.requestAnimeId = null;\n  }\n\n  play() {\n    this.requestAnimeId = requestAnimationFrame(() => {\n      if (!this.while(this.state)) return this.stop();\n      this.state = this.next(this.state);\n      this.play();\n    });\n    return this;\n  }\n\n  run() {\n    while (this.while(this.state)) {\n      this.state = this.next(this.state);\n    }\n    return this;\n  }\n\n  stop() {\n    cancelAnimationFrame(this.requestAnimeId);\n    return this;\n  }\n\n  static builder() {\n    return new AnimatorBuilder();\n  }\n}\n\nclass AnimatorBuilder {\n  constructor() {\n    this._state = null;\n    this._next = null;\n    this._end = null;\n  }\n\n  initialState(state) {\n    this._state = state;\n    return this;\n  }\n\n  nextState(next) {\n    this._next = next;\n    return this;\n  }\n\n  while(end) {\n    this._end = end;\n    return this;\n  }\n\n  build() {\n    const someAreEmpty = [this._state, this._next, this._end].some(\n      (x) => x === null || x === undefined\n    );\n    if (someAreEmpty) throw new Error(\"Animator properties are missing\");\n    return new Animator(this._state, this._next, this._end);\n  }\n}\n","import Matrix from \"../../Matrix/main/Matrix\";\n\nexport default class BBox {\n  constructor(min, max) {\n    this.isEmpty = min === undefined || max === undefined;\n    if (this.isEmpty) return this;\n    this.min = min.op(max, Math.min);\n    this.max = max.op(min, Math.max);\n    this.center = min.add(max).scale(1 / 2);\n    this.diagonal = max.sub(min);\n  }\n  /**\n   * Union of boxes\n   * @param {*} box\n   */\n  add(box) {\n    if (this === BBox.EMPTY) return box;\n    const { min, max } = this;\n    return new BBox(min.op(box.min, Math.min), max.op(box.max, Math.max));\n  }\n\n  union = this.add;\n\n  /**\n   * Intersection of boxes\n   * @param {*} box\n   */\n  sub(box) {\n    if (this === BBox.EMPTY) return BBox.EMPTY;\n    const { min, max } = this;\n    const newMin = min.op(box.min, Math.max);\n    const newMax = max.op(box.max, Math.min);\n    const newDiag = newMax.sub(newMin);\n    const isAllPositive = newDiag.data.every((x) => x >= 0);\n    return !isAllPositive ? BBox.EMPTY : new BBox(newMin, newMax);\n  }\n\n  inter = this.sub;\n\n  move(vector) {\n    return new BBox(this.min.add(vector), this.max.add(vector));\n  }\n\n  collidesWith(box) {\n    const actionByTypes = [\n      { type: BBox, action: () => !this.sub(box).isEmpty },\n      { type: Matrix, action: () => !this.sub(new BBox(box, box)).isEmpty },\n    ];\n    for (let i = 0; i < actionByTypes.length; i++) {\n      if (box instanceof actionByTypes[i].type) {\n        return actionByTypes[i].action();\n      }\n    }\n  }\n\n  equals(box) {\n    if (!(box instanceof BBox)) return false;\n    if (this == BBox.EMPTY) return true;\n    return this.min.equals(box.min) && this.max.equals(box.max);\n  }\n\n  static ofPoint(...array) {\n    const point = Matrix.vec(...array);\n    return new BBox(point, point);\n  }\n  static EMPTY = new BBox();\n}\n","import Color from \"../../Color/main/Color\";\nimport Matrix from \"../../Matrix/main/Matrix\";\nimport BBox from \"../../BBox/main/BBox\";\nconst { vec2 } = Matrix;\n/*\n Canvas coordinates\n\n 0                  W-1\n +-------------> y\n |\n |\n |       *\n |\n |\n v x\n\n H-1\n/*\n\nThe point xe_1 + ye_2 corresponds to a point in the middle of a pxl.\n\nThe canvas data is an array of length colors(C) * width(W) * height(H). Is a 3D-array.\nThe index is a number in [0, C * W * H - 1].\nHaving (x, y, z) where z is the color axis, the formula to index the array is :\n\nf(x, y, z) = C * W * x + C * y + z.\n\nWhere x in [0, H - 1], y in [0, W - 1] and z in [0, C - 1].\n\nNote that f(H - 1, W - 1, C - 1) = C * W * H - 1.\n*/\n\nexport default class Canvas {\n  /**\n   *\n   * @param {canvasDOM} canvas: DOM element of type canvas\n   */\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\", {\n      willReadFrequently: true\n    });\n    this.image = this.ctx.getImageData(0, 0, canvas.width, canvas.height);\n    // width * height * 4 array of integers\n    this.data = this.image.data;\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  getDom = this.getCanvas;\n\n  get width() {\n    return this.canvas.width;\n  }\n\n  get height() {\n    return this.canvas.height;\n  }\n  //========================================================================================\n  /*                                                                                      *\n   *                                 side effects function                                *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   * Update color of canvas\n   * @param {Color} color\n   * @returns {Canvas}\n   */\n  fill(color = Color.ofRGBARaw(255, 255, 255)) {\n    this.ctx.fillStyle = `rgba(${color.red}, ${color.green}, ${color.blue}, ${color.alpha / 255.0\n      })`;\n    console.log(this.ctx.fillStyle);\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.image = this.ctx.getImageData(\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height\n    );\n    this.data = this.image.data;\n    return this;\n  }\n\n  /**\n   *\n   * @param {(Color, Number, Number) => Color} lambda\n   * @returns {Canvas}\n   */\n  map(lambda = () => { }) {\n    const n = this.data.length;\n    const { width: w } = this.canvas;\n    for (let i = 0; i < n; i += 4) {\n      const x = Math.floor(i / (4 * w));\n      const y = Math.floor(i / 4) % w;\n      const color = lambda(\n        Color.ofRGBARaw(\n          this.data[i],\n          this.data[i + 1],\n          this.data[i + 2],\n          this.data[i + 3]\n        ),\n        x,\n        y\n      );\n      this.data[i] = color.red;\n      this.data[i + 1] = color.green;\n      this.data[i + 2] = color.blue;\n      this.data[i + 3] = color.alpha;\n    }\n    return this;\n  }\n\n  /**\n   * Return pxl color at (i,j)\n   * @param {Number} i: integer \\in [0,H-1]\n   * @param {Number} j: integer \\in [0,W-1]\n   * @returns {Color}\n   */\n  getPxl(i, j) {\n    const { width, height } = this.canvas;\n    if (i < 0 || i >= height || j < 0 || j >= width) return undefined;\n    const index = 4 * (i * width + j);\n    return Color.ofRGBARaw(\n      this.imgBuffer[index],\n      this.imgBuffer[index + 1],\n      this.imgBuffer[index + 2],\n      this.imgBuffer[index + 3]\n    );\n  }\n  /**\n   * Set pxl color at (i,j)\n   * @param {Number} i: integer \\in [0,H-1]\n   * @param {Number} j: integer \\in [0,W-1]\n   * @param {Color} color\n   */\n  setPxl(i, j, color) {\n    const { width, height } = this.canvas;\n    if (i < 0 || i >= height || j < 0 || j >= width) return this;\n    const index = 4 * (i * width + j);\n    this.data[index] = color.red;\n    this.data[index + 1] = color.green;\n    this.data[index + 2] = color.blue;\n    this.data[index + 3] = color.alpha;\n    return this;\n  }\n\n  /**\n   *\n   * @param {Array<Number>} start: 2-Array\n   * @param {Array<Number>} end: 2-Array\n   * @param {Canvas}\n   */\n  drawLine(start, end, shader = (x, y) => Color.ofRGBA(0, 0, 0)) {\n    // faster than using vec2\n    const { width, _ } = this.canvas;\n    const line = this._clipLine(start, end).map((x) => x.toArray());\n    if (line.length === 0) return;\n    const [p0, p1] = line;\n    const v = [p1[0] - p0[0], p1[1] - p0[1]];\n    const n = Math.abs(v[0]) + Math.abs(v[1]);\n    for (let k = 0; k < n; k++) {\n      const s = k / n;\n      const x = [p0[0] + v[0] * s, p0[1] + v[1] * s].map(Math.floor);\n      const [i, j] = x;\n      const index = 4 * (i * width + j);\n      const color = shader(i, j);\n      this.data[index] = color.red;\n      this.data[index + 1] = color.green;\n      this.data[index + 2] = color.blue;\n      this.data[index + 3] = color.alpha;\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param {Array<Number>} p0 : 2-array<number>\n   * @param {Array<Number>} p1 : 2-array<number>\n   * @param {Array<Number>} p2 : 2-array<number>\n   * @param {(Number, Number) => Color} shader : (number, number) => Color\n   * @returns\n   */\n  drawTriangle(p0, p1, p2, shader = (x, y) => Color.ofRGBA(0, 0, 0)) {\n    return this._drawConvexPolygon([p0, p1, p2], shader);\n  }\n\n  paint() {\n    this.ctx.putImageData(this.image, 0, 0);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Auxiliary functions                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   *\n   * @param {*} arrayOfPoints : Array<2-Array<Number>>\n   * @param {*} shader : (x,y) => color\n   * @returns\n   */\n  _drawConvexPolygon(arrayOfPoints, shader) {\n    const { width, height } = this.canvas;\n    const canvasBox = new BBox(vec2.ZERO, vec2.of(height, width));\n    let boundingBox = BBox.EMPTY;\n    arrayOfPoints.forEach((x) => {\n      boundingBox = boundingBox.add(BBox.ofPoint(...x));\n    });\n    const finalBox = canvasBox.inter(boundingBox);\n    const [xMin, yMin] = finalBox.min.toArray();\n    const [xMax, yMax] = finalBox.max.toArray();\n\n    for (let i = xMin; i < xMax; i++) {\n      for (let j = yMin; j < yMax; j++) {\n        if (this._isInsideConvex([i, j], arrayOfPoints)) {\n          const color = shader(i, j);\n          const index = 4 * (i * width + j);\n          this.data[index] = color.red;\n          this.data[index + 1] = color.green;\n          this.data[index + 2] = color.blue;\n          this.data[index + 3] = color.alpha;\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param {*} x: 2-Array<Number>\n   * @param {*} points: Array<2-Array<Number>>\n   * @returns\n   */\n  _isInsideConvex(x, points) {\n    const m = points.length;\n    const v = [];\n    const vDotN = [];\n    for (let i = 0; i < m; i++) {\n      const p1 = points[(i + 1) % m];\n      const p0 = points[i];\n      v[i] = [p1[0] - p0[0], p1[1] - p0[1]];\n      const vi = v[i];\n      const n = [-vi[1], vi[0]];\n      const r = [x[0] - p0[0], x[1] - p0[1]];\n      vDotN[i] = r[0] * n[0] + r[1] * n[1];\n    }\n    let orientation = v[0][0] * v[1][1] - v[0][1] * v[1][0] >= 0 ? 1 : -1;\n    for (let i = 0; i < m; i++) {\n      const myDot = vDotN[i] * orientation;\n      if (myDot < 0) return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param {*} start: 2-Array<Number>\n   * @param {*} end: 2-Array<Number>\n   * @returns 2-Array<2-Array<Number>>\n   */\n  _clipLine(start, end) {\n    const { width, height } = this.canvas;\n    const bbox = new BBox(vec2.ZERO, vec2.of(height, width));\n    const pointStack = [start, end].map((x) => vec2.of(...x));\n    const inStack = [];\n    const outStack = [];\n    for (let i = 0; i < pointStack.length; i++) {\n      const p = pointStack[i];\n      if (bbox.collidesWith(p)) {\n        inStack.push(p);\n      } else {\n        outStack.push(p);\n      }\n    }\n    // both points are inside\n    if (inStack.length >= 2) {\n      return inStack;\n    }\n    // one of them is inside\n    if (inStack.length === 1) {\n      const [inPoint] = inStack;\n      const [outPoint] = outStack;\n      return [inPoint, ...this._getLineCanvasIntersection(inPoint, outPoint)];\n    }\n    // both points are outside,need to intersect the boundary\n    return this._getLineCanvasIntersection(...outStack);\n  }\n\n  /**\n   *\n   * @param {*} start: vec2(matrix)\n   * @param {*} end: vec2(matrix)\n   */\n  _getLineCanvasIntersection(start, end) {\n    const { width, height } = this.canvas;\n    const v = end.sub(start);\n    // point and direction of boundary\n    const boundary = [\n      [vec2.ZERO, vec2.of(height, 0)],\n      [vec2.of(height, 0), vec2.of(0, width)],\n      [vec2.of(height, width), vec2.of(-height, 0)],\n      [vec2.of(0, width), vec2.of(0, -width)],\n    ];\n    const intersectionSolutions = [];\n    boundary.forEach(([s, d]) => {\n      if (d.get(0) === 0) {\n        const solution = this._solveLowTriMatrix(v, -d.get(1), s.sub(start));\n        solution !== undefined && intersectionSolutions.push(solution);\n      } else {\n        const solution = this._solveUpTriMatrix(v, -d.get(0), s.sub(start));\n        solution !== undefined && intersectionSolutions.push(solution);\n      }\n    });\n    const validIntersections = [];\n    intersectionSolutions.forEach((solution) => {\n      const [x, y] = [solution.get(0), solution.get(1)];\n      if (0 <= x && x <= 1 && 0 <= y && y <= 1) {\n        validIntersections.push(solution);\n      }\n    });\n    if (validIntersections.length === 0) return [];\n    return validIntersections.map((solution) => {\n      const t = solution.get(0);\n      return start.add(v.scale(t));\n    });\n  }\n\n  /**\n   *\n   * @param {*} v: vec2\n   * @param {*} a: number\n   * @param {*} f: vec2\n   * @returns vec2\n   */\n  _solveLowTriMatrix(v, a, f) {\n    const v1 = v.get(0);\n    const v2 = v.get(1);\n    const av1 = a * v1;\n    if (av1 === 0 || v1 === 0) return undefined;\n    const f1 = f.get(0);\n    const f2 = f.get(1);\n    return vec2.of(f1 / v1, (f2 * v1 - v2 * f1) / av1);\n  }\n\n  /**\n   *\n   * @param {*} v: vec2\n   * @param {*} a: number\n   * @param {*} f: vec2\n   * @returns vec2\n   */\n  _solveUpTriMatrix(v, a, f) {\n    const v1 = v.get(0);\n    const v2 = v.get(1);\n    const av2 = a * v2;\n    if (av2 === 0 || v2 === 0) return undefined;\n    const f1 = f.get(0);\n    const f2 = f.get(1);\n    return vec2.of(f2 / v2, (f1 * v2 - v1 * f2) / av2);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static builder() {\n    return new CanvasBuilder();\n  }\n}\n\nexport class CanvasBuilder {\n  _canvas = document.createElement(\"canvas\");\n  _width = 500;\n  _height = 500;\n  constructor() { }\n\n  width(width = this._width) {\n    this._width = width;\n    return this;\n  }\n\n  height(height = this._height) {\n    this._height = height;\n    return this;\n  }\n\n  build() {\n    this._canvas.setAttribute(\"width\", this._width);\n    this._canvas.setAttribute(\"height\", this._height);\n    return new Canvas(this._canvas);\n  }\n}\n","import BBox from \"../../BBox/main/BBox\";\nimport Canvas, { CanvasBuilder } from \"../../Canvas/main/Canvas\";\nimport Matrix from \"../../Matrix/main/Matrix\";\nconst { vec2 } = Matrix;\n\nexport default class Canvas2d extends Canvas {\n  constructor(canvas, camera) {\n    super(canvas);\n    this.camera = camera;\n  }\n\n  setCamera(bbox) {\n    this.camera = bbox;\n  }\n\n  map(lambda = () => {}) {\n    return super.map((c, i, j) => {\n      const [x, y] = this.forwardCoord(i, j);\n      return lambda(c, x, y);\n    });\n  }\n\n  getPxl(x, y) {\n    const [i, j] = this.inverseCoord(x, y);\n    return super.getPxl(i, j);\n  }\n\n  setPxl(x, y, color) {\n    const [i, j] = this.inverseCoord(x, y);\n    return super.setPxl(i, j, color);\n  }\n\n  drawLine(start, end, shader) {\n    const startPos = this.inverseCoord(...start);\n    const endPos = this.inverseCoord(...end);\n    return super.drawLine(startPos, endPos, shader);\n  }\n\n  drawTriangle(p0, p1, p2, shader) {\n    const q0 = this.inverseCoord(...p0);\n    const q1 = this.inverseCoord(...p1);\n    const q2 = this.inverseCoord(...p2);\n    return super.drawTriangle(q0, q1, q2, shader);\n  }\n\n  /**\n   * Map from camera coord to canvas coord\n   */\n  inverseCoord(x, y) {\n    const { min, max } = this.camera;\n    const { width, height } = this.canvas;\n    const [minX, minY] = min.data;\n    const [maxX, maxY] = max.data;\n    return [\n      (-(y - maxY) * (height - 1)) / (maxY - minY),\n      ((x - minX) * (width - 1)) / (maxX - minX),\n    ].map(Math.floor);\n  }\n\n  /**\n   * Map from canvas coord to camera coord\n   */\n  forwardCoord(i, j) {\n    const { min, max } = this.camera;\n    const { width, height } = this.canvas;\n    const [minX, minY] = min.data;\n    const [maxX, maxY] = max.data;\n    return [\n      minX + ((maxX - minX) * j) / (width - 1),\n      maxY + ((minY - maxY) * i) / (height - 1),\n    ];\n  }\n\n  static builder() {\n    return new Canvas2dBuilder();\n  }\n}\n\nexport class Canvas2dBuilder extends CanvasBuilder {\n  _camera = new BBox(vec2.of(-1, -1), vec2.of(1, 1));\n\n  camera(bbox = this._camera) {\n    this._camera = bbox;\n    return this;\n  }\n\n  build() {\n    const canvasBase = super.build();\n    return new Canvas2d(canvasBase.canvas, this._camera);\n  }\n}\n","import ImageIO from \"./ImageIO\";\n/*\n Canvas coordinates\n\n 0                  W-1\n +-------------> y\n |\n |\n |       *\n |\n |\n v x\n\n H-1\n */\n\n/*\n\nThe point xe_1 + ye_2 corresponds to a point in the middle of a pxl.\n\nThe canvas data is an array of length colors(C) * width(W) * height(H). Is a 3D-array.\nThe index is a number in [0, C * W * H - 1].\nHaving (x, y, z) where z is the color axis, the formula to index the array is :\n\nf(x, y, z) = C * W * x + C * y + z.\n\nWhere x in [0, H - 1], y in [0, W - 1] and z in [0, C - 1].\n\nNote that f(H - 1, W - 1, C - 1) = C * W * H - 1.\n*/\n\n// Auxiliary functions\nfunction scale(u, r) {\n  var ans = [];\n  ans[0] = u[0] * r;\n  ans[1] = u[1] * r;\n  return ans;\n}\n\nfunction add(u, v) {\n  var ans = [];\n  ans[0] = u[0] + v[0];\n  ans[1] = u[1] + v[1];\n  return ans;\n}\n\nfunction floor(x) {\n  var ans = [];\n  ans[0] = Math.floor(x[0]);\n  ans[1] = Math.floor(x[1]);\n  return ans;\n}\n\nfunction diff(u, v) {\n  var ans = [];\n  ans[0] = u[0] - v[0];\n  ans[1] = u[1] - v[1];\n  return ans;\n}\n\nfunction dot(u, v) {\n  return u[0] * v[0] + u[1] * v[1];\n}\n\nfunction squareNorm(x) {\n  return dot(x, x);\n}\n\nfunction norm(x) {\n  return Math.sqrt(dot(x, x));\n}\n\nfunction min(u, v) {\n  var ans = [];\n  ans[0] = Math.min(u[0], v[0]);\n  ans[1] = Math.min(u[1], v[1]);\n  return ans;\n}\n\nfunction max(u, v) {\n  var ans = [];\n  ans[0] = Math.max(u[0], v[0]);\n  ans[1] = Math.max(u[1], v[1]);\n  return ans;\n}\n\n/**\n * return solution to : [ u_0 , h] x = z_0\n *\n *                       [ u_1,  0] y = z_1\n */\nfunction solve2by2UpperTriMatrix(u, h, z) {\n  var aux = z[1] / u[1];\n  return [aux, (-u[0] * aux + z[0]) / h];\n}\n/**\n * return solution to : [ u_0 , 0] x = z_0\n *\n *                       [ u_1,  w] y = z_1\n */\nfunction solve2by2LowerTriMatrix(u, w, z) {\n  var aux = z[0] / u[0];\n  return [aux, (-u[1] * aux + z[1]) / w];\n}\n\n// Canvas\nvar Canvas = function (canvas) {\n  this.canvas = canvas;\n  this.ctx = canvas.getContext(\"2d\");\n  this.image = this.ctx.getImageData(0, 0, canvas.width, canvas.height);\n  // width * height * 4 array of integers\n  this.imageData = this.image.data;\n};\n\n/**\n * Returns a two vector with Height as first coordinate and Width as second. [Height, Width].\n */\nCanvas.prototype.getSize = function () {\n  return [this.canvas.height, this.canvas.width];\n};\n\n/**\n *  Draw update image on canvas.\n */\nCanvas.prototype.paintImage = function () {\n  this.ctx.putImageData(this.image, 0, 0);\n};\n\nCanvas.prototype.getCanvas = function () {\n  return this.canvas;\n};\n\n/**\n * Clear Image with @rgba color.\n *\n * @param rgba\n */\nCanvas.prototype.clearImage = function (rgba) {\n  this.useCanvasCtx((canvas) => {\n    var size = canvas.getSize();\n    canvas.ctx.fillStyle =\n      \"rgba(\" + rgba[0] + \",\" + rgba[1] + \",\" + rgba[2] + \",\" + rgba[3] + \")\";\n    canvas.ctx.globalCompositeOperation = \"source-over\";\n    canvas.ctx.fillRect(0, 0, size[1], size[0]);\n  }, true);\n};\n\nCanvas.prototype.useCanvasCtx = function (lambda, isClearImage = false) {\n  if (!isClearImage) {\n    this.ctx.putImageData(this.image, 0, 0);\n  }\n  lambda(this);\n  this.image = this.ctx.getImageData(\n    0,\n    0,\n    this.canvas.width,\n    this.canvas.height\n  );\n  this.imageData = this.image.data;\n};\n\nCanvas.prototype.getImageIndex = function (x) {\n  return 4 * (this.canvas.width * x[0] + x[1]);\n};\n\nCanvas.prototype.getPxl = function (x) {\n  var index = this.getImageIndex(x);\n  return [\n    this.imageData[index],\n    this.imageData[index + 1],\n    this.imageData[index + 2],\n    this.imageData[index + 3],\n  ];\n};\n\nCanvas.prototype.drawPxl = function (x, rgb) {\n  var index = this.getImageIndex(x);\n  this.imageData[index] = rgb[0];\n  this.imageData[index + 1] = rgb[1];\n  this.imageData[index + 2] = rgb[2];\n  this.imageData[index + 3] = rgb[3];\n};\n\n/*\n * x1     :   2-dim array\n * x2     :   2-dim array\n * shader :   is a function that receives a 2-dim array and a line (array with 2 points) and returns a rgba 4-dim array\n */\nCanvas.prototype.drawLine = function (x1, x2, shader) {\n  // add points before clip\n  shader.points = [x1, x2];\n\n  // do clipping\n  var stack = [];\n  stack.push(x1);\n  stack.push(x2);\n  var inStack = [];\n  var outStack = [];\n  for (var i = 0; i < stack.length; i++) {\n    var x = stack[i];\n    if (\n      0 <= x[0] &&\n      x[0] < this.canvas.height &&\n      0 <= x[1] &&\n      x[1] < this.canvas.width\n    ) {\n      inStack.push(x);\n    } else {\n      outStack.push(x);\n    }\n  }\n  // both points are inside canvas\n  if (inStack.length == 2) {\n    this.drawLineInt(inStack[0], inStack[1], shader);\n    return;\n  }\n  //intersecting line with canvas\n  var intersectionSolutions = [];\n  var v = [x2[0] - x1[0], x2[1] - x1[1]];\n  // Let s \\in [0,1]\n  // line intersection with [0, 0]^T + [H - 1, 0]^T s\n  intersectionSolutions.push(\n    solve2by2UpperTriMatrix(v, -(this.canvas.height - 1), [-x1[0], -x1[1]])\n  );\n  // line intersection with [H - 1, 0]^T + [0, W - 1]^T s\n  intersectionSolutions.push(\n    solve2by2LowerTriMatrix(v, -(this.canvas.width - 1), [\n      this.canvas.height - 1 - x1[0],\n      -x1[1],\n    ])\n  );\n  // line intersection with [H - 1, W - 1]^T + [-(H - 1), 0]^T s\n  intersectionSolutions.push(\n    solve2by2UpperTriMatrix(v, this.canvas.height - 1, [\n      this.canvas.height - 1 - x1[0],\n      this.canvas.width - 1 - x1[1],\n    ])\n  );\n  // line intersection with [0, W - 1]^T + [0, -(W - 1)]^T s\n  intersectionSolutions.push(\n    solve2by2LowerTriMatrix(v, this.canvas.width - 1, [\n      -x1[0],\n      this.canvas.width - 1 - x1[1],\n    ])\n  );\n\n  var validIntersection = [];\n  for (var i = 0; i < intersectionSolutions.length; i++) {\n    var x = intersectionSolutions[i];\n    if (0 <= x[0] && x[0] <= 1 && 0 <= x[1] && x[1] <= 1) {\n      validIntersection.push(x);\n    }\n  }\n\n  if (validIntersection.length == 0) return;\n\n  //it can be shown that at this point there is at least one valid intersection.\n  if (inStack.length > 0) {\n    var p = [\n      x1[0] + validIntersection[0][0] * v[0],\n      x1[1] + validIntersection[0][0] * v[1],\n    ];\n    this.drawLineInt(inStack.pop(), p, shader);\n    return;\n  }\n\n  var p0 = [\n    x1[0] + validIntersection[0][0] * v[0],\n    x1[1] + validIntersection[0][0] * v[1],\n  ];\n  for (var i = 1; i < validIntersection.length; i++) {\n    var p = [\n      x1[0] + validIntersection[i][0] * v[0],\n      x1[1] + validIntersection[i][0] * v[1],\n    ];\n    var v = diff(p, p0);\n    if (dot(v, v) > 1e-3) {\n      this.drawLineInt(p0, p, shader);\n      return;\n    }\n  }\n  this.drawLineInt(p0, p0, shader);\n};\n\nCanvas.prototype.drawLineInt = function (x1, x2, shader) {\n  x1 = floor(x1);\n  x2 = floor(x2);\n\n  var index = [-1, 0, 1];\n\n  var n = index.length;\n  var nn = n * n;\n\n  var x = [];\n  x[0] = x1[0];\n  x[1] = x1[1];\n\n  var tangent = diff(x2, x1);\n  var normal = [];\n  normal[0] = -tangent[1];\n  normal[1] = tangent[0];\n\n  shader(x, shader.points, this);\n\n  while (x[0] !== x2[0] || x[1] !== x2[1]) {\n    var fmin = Number.MAX_VALUE;\n    var minDir = [];\n    for (var k = 0; k < nn; k++) {\n      var i = index[k % n];\n      var j = index[Math.floor(k / n)];\n\n      var nextX = add(x, [i, j]);\n\n      var v = diff(nextX, x1);\n      var f = Math.abs(dot(v, normal)) - dot(v, tangent);\n      if (fmin > f) {\n        fmin = f;\n        minDir = [i, j];\n      }\n    }\n\n    x = add(x, minDir);\n    shader(x, shader.points, this);\n  }\n  shader(x, shader.points, this);\n};\n\nCanvas.prototype.drawPolygon = function (\n  array,\n  shader,\n  isInsidePoly = Canvas.isInsidePolygon\n) {\n  let upperBox = [\n    [Number.MAX_VALUE, Number.MAX_VALUE],\n    [Number.MIN_VALUE, Number.MIN_VALUE],\n  ];\n  for (let i = 0; i < array.length; i++) {\n    upperBox[0] = min(array[i], upperBox[0]);\n    upperBox[1] = max(array[i], upperBox[1]);\n  }\n\n  let size = this.getSize();\n  let clampedSize = diff(size, [1, 1]);\n  let zeros = [0, 0];\n  upperBox[0] = floor(min(clampedSize, max(zeros, upperBox[0])));\n  upperBox[1] = floor(min(clampedSize, max(zeros, upperBox[1])));\n\n  for (var i = upperBox[0][0]; i < upperBox[1][0]; i++) {\n    for (var j = upperBox[0][1]; j < upperBox[1][1]; j++) {\n      var x = [i, j];\n      if (isInsidePoly(x, array)) {\n        shader(x, array, this);\n      }\n    }\n  }\n};\n\n/*\n * x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * shader :   is a function that receives a 2-dim array and a triangle (array with 3 points) and returns a rgba 4-dim array\n */\nCanvas.prototype.drawTriangle = function (x1, x2, x3, shader) {\n  var array = [x1, x2, x3];\n  this.drawPolygon(array, shader, Canvas.isInsideConvex);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * x4     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas.prototype.drawQuad = function (x1, x2, x3, x4, shader) {\n  this.drawPolygon([x1, x2, x3, x4], shader);\n};\n\nCanvas.prototype.drawImage = function (img, x) {\n  if (\"isReady\" in img && !img.isReady) return;\n  this.useCanvasCtx((canvas) => canvas.ctx.drawImage(img, x[1], x[0]));\n};\n\nCanvas.prototype.drawCircle = function (x, r, shader) {\n  var corner = scale([1, 1], r);\n  var upperBox = [diff(x, corner), add(x, corner)];\n  var size = this.getSize();\n  upperBox[0] = floor(min(diff(size, [1, 1]), max([0, 0], upperBox[0])));\n  upperBox[1] = floor(min(diff(size, [1, 1]), max([0, 0], upperBox[1])));\n  for (var i = upperBox[0][0]; i <= upperBox[1][0]; i++) {\n    for (var j = upperBox[0][1]; j <= upperBox[1][1]; j++) {\n      var p = [i, j];\n      if (this.isInsideCircle(p, x, r)) {\n        shader(p, [x, r], this);\n      }\n    }\n  }\n};\n\nCanvas.prototype.isInsideCircle = function (p, x, r) {\n  return squareNorm(diff(p, x)) <= r * r;\n};\n\nCanvas.prototype.addEventListener = function (key, lambda, useCapture) {\n  this.canvas.addEventListener(key, lambda, useCapture);\n};\n\nCanvas.prototype.drawString = function (x, string, contextShader) {\n  this.useCanvasCtx((canvas) => {\n    contextShader(canvas.ctx);\n    canvas.ctx.fillText(string, x[1], x[0]);\n  });\n};\n\n// Static functions\n\n// slower than isInsideConvex method\nCanvas.isInsidePolygon = function (x, array) {\n  var v = [];\n  var theta = 0;\n  var n = array.length;\n  for (var i = 0; i < n; i++) {\n    v[0] = diff(array[(i + 1) % n], x);\n    v[1] = diff(array[i], x);\n    theta += Math.acos(dot(v[0], v[1]) / (norm(v[0]) * norm(v[1])));\n  }\n  return Math.abs(theta - 2 * Math.PI) < 1e-3;\n};\n\nCanvas.isInsideConvex = function (x, array) {\n  var m = array.length;\n  var v = [];\n  var vDotN = [];\n  for (var i = 0; i < m; i++) {\n    v[i] = diff(array[(i + 1) % m], array[i]);\n    let n = [-v[i][1], v[i][0]];\n    let r = diff(x, array[i]);\n    vDotN[i] = dot(r, n);\n  }\n  let orientation = v[0][0] * v[1][1] - v[0][1] * v[1][0] > 0 ? 1 : -1;\n  for (var i = 0; i < m; i++) {\n    var myDot = vDotN[i] * orientation;\n    if (myDot < 0) return false;\n  }\n  return true;\n};\n\nCanvas.simpleShader = function (color) {\n  return (x, element, canvas) => canvas.drawPxl(x, color);\n};\n\nCanvas.colorShader = function (colors) {\n  var auxShader = (x, poly, canvas, alpha) => {\n    var interpolateColors = [0, 0, 0, 0];\n    for (var i = 0; i < poly.length; i++) {\n      interpolateColors[0] = interpolateColors[0] + colors[i][0] * alpha[i];\n      interpolateColors[1] = interpolateColors[1] + colors[i][1] * alpha[i];\n      interpolateColors[2] = interpolateColors[2] + colors[i][2] * alpha[i];\n      interpolateColors[3] = interpolateColors[3] + colors[i][3] * alpha[i];\n    }\n    canvas.drawPxl(x, interpolateColors);\n  };\n  return Canvas.interpolateTriangleShader(auxShader);\n};\n\nCanvas.interpolateQuadShader = function (shader) {\n  return function (x, quad, canvas) {\n    var t1 = [quad[0], quad[1], quad[2]];\n    var t2 = [quad[2], quad[3], quad[0]];\n    var alpha = Canvas.triangleBaryCoord(x, t1);\n    if (\n      alpha[0] > 0 &&\n      alpha[1] > 0 &&\n      alpha[2] > 0 &&\n      Math.abs(alpha[0] + alpha[1] + alpha[2] - 1) < 1e-10\n    ) {\n      shader(x, quad, canvas, [alpha[0], alpha[1], alpha[2], 0]);\n    } else {\n      alpha = Canvas.triangleBaryCoord(x, t2);\n      shader(x, quad, canvas, [alpha[2], 0, alpha[0], alpha[1]]);\n    }\n  };\n};\n\nCanvas.interpolateTriangleShader = function (shader) {\n  return (x, triangle, canvas) => {\n    const alpha = Canvas.triangleBaryCoord(x, triangle);\n    shader(x, triangle, canvas, alpha);\n  };\n};\n\nCanvas.interpolateLineShader = function (shader) {\n  return (x, line, canvas) => {\n    var v = diff(line[1], line[0]);\n    var z = diff(x, line[0]);\n    var vnorm = squareNorm(v);\n    var projection = dot(z, v);\n    var t = vnorm == 0.0 ? 0 : projection / vnorm;\n    shader(x, line, canvas, t);\n  };\n};\n\n/**\n * img: html loaded image.\n * quadTexCoord: [0, 1]^{2 * 4}, texture coordinates\n */\nCanvas.quadTextureShader = function (\n  img,\n  quadTexCoord,\n  interpolation = Canvas.bilinearInterpolation\n) {\n  let imageCache = null;\n  const imageShader = (x, quad, canvas, alpha) => {\n    if (!img.isReady || imageCache == null)\n      imageCache = new Canvas(ImageIO.getImageCanvas(img));\n    const imageCanvas = imageCache;\n    const imgSize = imageCanvas.getSize();\n    const interpolateTexCoord = [0, 0];\n    for (let i = 0; i < quadTexCoord.length; i++) {\n      interpolateTexCoord[0] =\n        interpolateTexCoord[0] + quadTexCoord[i][0] * alpha[i];\n      interpolateTexCoord[1] =\n        interpolateTexCoord[1] + quadTexCoord[i][1] * alpha[i];\n    }\n    var i = [\n      (1 - interpolateTexCoord[1]) * (imgSize[1] - 1),\n      (imgSize[0] - 1) * interpolateTexCoord[0],\n    ];\n    // bound coordinates\n    i = max([0, 0], min(diff([imgSize[0], imgSize[1]], [1, 1]), i));\n    // pxl lower corner\n    var j = floor(i);\n    var cornerColors = [\n      imageCanvas.getPxl(j),\n      imageCanvas.getPxl(add(j, [1, 0])),\n      imageCanvas.getPxl(add(j, [1, 1])),\n      imageCanvas.getPxl(add(j, [0, 1])),\n    ];\n    var finalColor = interpolation(cornerColors, diff(i, j));\n    canvas.drawPxl(x, finalColor);\n  };\n  return Canvas.interpolateQuadShader(imageShader);\n};\n\nCanvas.triangleCache = (() => {\n  const hashMap = [];\n  const size = 3;\n  return {\n    constains: (triangleHash) => hashMap[triangleHash % size] != undefined,\n    get: (triangleHash) => hashMap[triangleHash % size],\n    set: (triangleHash, value) => (hashMap[triangleHash % size] = value),\n  };\n})(); //{triangle: null, u: [], v:[], det:null, hash:null}\n\nCanvas.triangleHash = (triangle) => {\n  const array = [\n    triangle[0][0],\n    triangle[1][0],\n    triangle[2][0],\n    triangle[0][1],\n    triangle[1][1],\n    triangle[2][1],\n  ];\n  return array.reduce((h, x) => 31 * h + x, 1);\n};\n\nCanvas.triangleBaryCoord = function (x, triangle) {\n  const hash = Canvas.triangleHash(triangle);\n  const y = [x[0] - triangle[0][0], x[1] - triangle[0][1]];\n  if (!Canvas.triangleCache.constains(hash)) {\n    const u = [\n      triangle[1][0] - triangle[0][0],\n      triangle[1][1] - triangle[0][1],\n    ];\n    const v = [\n      triangle[2][0] - triangle[0][0],\n      triangle[2][1] - triangle[0][1],\n    ];\n    const det = u[0] * v[1] - u[1] * v[0];\n    Canvas.triangleCache.set(hash, {\n      triangle: triangle,\n      u: u.map((x) => x / det),\n      v: v.map((x) => x / det),\n      det: det,\n      hash: hash,\n    });\n  }\n  const cache = Canvas.triangleCache.get(hash);\n  const u = cache.u;\n  const v = cache.v;\n  const det = cache.det;\n  if (det == 0) return [0, 0, 0];\n  var alpha = [v[1] * y[0] - v[0] * y[1], u[0] * y[1] - u[1] * y[0]];\n  return [1 - alpha[0] - alpha[1], alpha[0], alpha[1]];\n};\n\n/**\n * values \\in R^{k * 4}\n * x \\in [0,1]^2\n */\nCanvas.bilinearInterpolation = function (values, x) {\n  var acc = [];\n  for (var k = 0; k < values.length; k++) {\n    var f03 = values[0][k] + (values[3][k] - values[0][k]) * x[1];\n    var f12 = values[1][k] + (values[2][k] - values[1][k]) * x[1];\n    var f = f03 + (f12 - f03) * x[0];\n    acc.push(f);\n  }\n  return acc;\n};\n/**\n * size: is an array with width and height of a HTML5 Canvas.\n * domId: DOM element where the canvas will be added\n *\n * returns Canvas object from the generated html canvas.\n */\nCanvas.createCanvas = function (size, domId) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"width\", size[0]);\n  canvas.setAttribute(\"height\", size[1]);\n  document.getElementById(domId).appendChild(canvas);\n  return canvas;\n};\n\nexport default Canvas;\n","import Canvas from \"./Canvas\";\n\n//Note that we can switch from heritage to composition, think about that\n\n// cameraSpace : 2-dim array with two 2-dim arrays that are intervals [a,b] | a < b\nvar Canvas2D = function (canvas, cameraSpace) {\n  Canvas.call(this, canvas);\n  if (\n    cameraSpace.length != 2 ||\n    (cameraSpace[0].length != 2 && cameraSpace[1].length != 2)\n  ) {\n    throw \"camera space must be 2-dim array with 2-dim arrays representing an interval\";\n  }\n  this.cameraSpace = cameraSpace;\n};\n\nCanvas2D.prototype = Object.create(Canvas.prototype);\nCanvas2D.prototype.constructor = Canvas2D;\n\n/* x : 2-dim array in camera space coordinates\n * returns : 2-dim array in integer coordinates\n */\nCanvas2D.prototype.integerTransform = function (x) {\n  var xint =\n    (-(this.canvas.height - 1) /\n      (this.cameraSpace[1][1] - this.cameraSpace[1][0])) *\n    (x[1] - this.cameraSpace[1][1]);\n  var yint =\n    ((this.canvas.width - 1) /\n      (this.cameraSpace[0][1] - this.cameraSpace[0][0])) *\n    (x[0] - this.cameraSpace[0][0]);\n  return [xint, yint];\n};\n\n/* x : 2-dim array in integer coordinates\n * returns : 2-dim array in camera space coordinates\n */\nCanvas2D.prototype.inverseTransform = function (x) {\n  var xt =\n    this.cameraSpace[0][0] +\n    ((this.cameraSpace[0][1] - this.cameraSpace[0][0]) /\n      (this.canvas.width - 1)) *\n      x[1];\n  var yt =\n    this.cameraSpace[1][1] -\n    ((this.cameraSpace[1][1] - this.cameraSpace[1][0]) /\n      (this.canvas.height - 1)) *\n      x[0];\n  return [xt, yt];\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawLine = function (x1, x2, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  Canvas.prototype.drawLine.call(this, y1, y2, shader);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawTriangle = function (x1, x2, x3, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  const y3 = this.integerTransform(x3);\n  Canvas.prototype.drawTriangle.call(this, y1, y2, y3, shader);\n};\n\n/* x1     :   2-dim array\n * x2     :   2-dim array\n * x3     :   2-dim array\n * x4     :   2-dim array\n * shader :   is a function that receives a 2-dim array and returns a rgba 4-dim array\n */\nCanvas2D.prototype.drawQuad = function (x1, x2, x3, x4, shader) {\n  const y1 = this.integerTransform(x1);\n  const y2 = this.integerTransform(x2);\n  const y3 = this.integerTransform(x3);\n  const y4 = this.integerTransform(x4);\n  Canvas.prototype.drawQuad.call(this, y1, y2, y3, y4, shader);\n};\n\nCanvas2D.prototype.drawCircle = function (x, r, shader) {\n  // it assumes squared canvas, for now ...\n  const y = this.integerTransform(x);\n  const z = this.integerTransform([r, 0])[1] - this.integerTransform([0, 0])[1];\n  Canvas.prototype.drawCircle.call(this, y, z, shader);\n};\n\nCanvas2D.prototype.drawImage = function (img, x) {\n  Canvas.prototype.drawImage.call(this, img, this.integerTransform(x));\n};\n\nCanvas2D.prototype.drawString = function (x, string, contextShader) {\n  const y = this.integerTransform(x);\n  Canvas.prototype.drawString.call(this, y, string, contextShader);\n};\n\n// camera : 2-dim array with two 2-dim arrays that are intervals [a,b] | a < b\nCanvas2D.prototype.setCamera = function (camera) {\n  if (camera.length != 2 || (camera[0].length != 2 && camera[1].length != 2)) {\n    throw \"camera space must be 2-dim array with 2-dim arrays representing an interval\";\n  }\n  this.cameraSpace = camera;\n};\n\nexport default Canvas2D;\n","const ImageIO = {\n  // empty object\n};\n\n/**\n * img : html image\n */\nImageIO.getImageCanvas = img => {\n  const canvasAux = document.createElement(\"canvas\");\n  canvasAux.width = img.width;\n  canvasAux.height = img.height;\n  const contextAux = canvasAux.getContext(\"2d\");\n  contextAux.fillStyle = \"rgba(0, 0, 0, 0)\";\n  contextAux.globalCompositeOperation = \"source-over\";\n  contextAux.fillRect(0, 0, canvasAux.width, canvasAux.height);\n  contextAux.drawImage(img, 0, 0);\n  return canvasAux;\n};\n\n/**\n * img : html image\n */\nImageIO.getDataFromImage = img => {\n  canvas = ImageIO.getImageCanvas(img);\n  return canvas.getContext(\"2d\").getImageData(0, 0, img.width, img.height);\n};\n\nImageIO.loadImage = src => {\n  const img = new Image();\n  img.src = src;\n  img.isReady = false;\n  img.onload = () => (img.isReady = true);\n  return img;\n};\n\nImageIO.generateImageReadyPredicate = img => () => img.isReady;\n\nexport default ImageIO;\n","const MAX_8BIT = 255;\n\nexport default class Color {\n  /**\n   *\n   * @param {Uint8Array} rgba\n   */\n  constructor(rgba) {\n    this.rgba = rgba;\n  }\n\n  getRGBA() {\n    return this.rgba;\n  }\n\n  get red() {\n    return this.rgba[0];\n  }\n\n  get green() {\n    return this.rgba[1];\n  }\n\n  get blue() {\n    return this.rgba[2];\n  }\n\n  get alpha() {\n    return this.rgba[3];\n  }\n\n  get redRaw(){\n    return this.red * MAX_8BIT;\n  }\n  get greenRaw(){\n    return this.green * MAX_8BIT;\n  }\n  get blueRaw(){\n    return this.blue * MAX_8BIT;\n  }\n\n  /**\n   *\n   * @param {Color} color\n   * @returns {Boolean}\n   */\n  equals(color) {\n    for (let i = 0; i < this.rgba.length; i++) {\n      if (this.rgba[i] !== color.rgba[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static ofRGBA(red = 0, green = 0, blue = 0, alpha = 1) {\n    const rgba = new Uint8Array(4);\n    rgba[0] = red * MAX_8BIT;\n    rgba[1] = green * MAX_8BIT;\n    rgba[2] = blue * MAX_8BIT;\n    rgba[3] = alpha * MAX_8BIT;\n    return new Color(rgba);\n  }\n\n  static ofRGBARaw(red = 0, green = 0, blue = 0, alpha = 255) {\n    const rgba = new Uint8Array(4);\n    rgba[0] = red;\n    rgba[1] = green;\n    rgba[2] = blue;\n    rgba[3] = alpha;\n    return new Color(rgba);\n  }\n\n  static random() {\n    const r = () => Math.random() * 256;\n    return Color.ofRGBA(r(), r(), r(), r());\n  }\n\n  static RED = Color.ofRGBA(1, 0, 0);\n  static GREEN = Color.ofRGBA(0, 1, 0);\n  static BLUE = Color.ofRGBA(0, 0, 1);\n  static BLACK = Color.ofRGBA(0, 0, 0);\n  static WHITE = Color.ofRGBA(1, 1, 1);\n}\n","//========================================================================================\n/*                                                                                      *\n *                              MATRIX UTILS (order counts)                             *\n *                                                                                      */\n//========================================================================================\n\nconst getIndexFromCoord = (_, m) => (i, j) => j + i * m;\nconst getCoordFromIndex = (_, m) => (k) => [k / m, k % m].map(Math.floor);\nconst index2Key = (i, j) => `${i},${j}`;\nconst key2Index = (k) => k.split(\",\").map(Number);\n\nclass MatrixBuilder {\n  constructor() {\n    this._size = [];\n    this.data = {};\n  }\n\n  size(n, m = 1) {\n    this._size = [n, m];\n    return this;\n  }\n\n  set(i, j, v) {\n    if (this._size.length === 0)\n      throw new MatrixError(\"Setting value to empty matrix\");\n    this.data[index2Key(i, j)] = v;\n    return this;\n  }\n\n  build() {\n    const [n, m] = this._size;\n    const data = new Float64Array(n * m);\n    const indexer = getIndexFromCoord(n, m);\n    Object.keys(this.data).forEach((key) => {\n      data[indexer(...key2Index(key))] = this.data[key];\n    });\n    return new Matrix(data, this._size);\n  }\n}\n\nclass RowBuilder {\n  constructor() {\n    this.rows = [];\n    this.dim = 0;\n  }\n\n  addRow(...array) {\n    if (this.dim === 0) {\n      this.dim = array.length;\n    }\n    if (this.dim !== array.length)\n      throw new MatrixError(\n        `Added row of different dimension, actual dim is ${this.dim}`\n      );\n    this.rows.push(array);\n    return this;\n  }\n\n  build() {\n    if (this.rows.length > 0) return this._buildWithRows();\n    throw new MatrixError(\"Building empty matrix\");\n  }\n\n  _buildWithRows() {\n    const rows = this.rows.length;\n    const cols = this.dim;\n    const data = new Float64Array(rows * cols);\n    const indexF = getIndexFromCoord(rows, cols);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        data[indexF(i, j)] = this.rows[i][j];\n      }\n    }\n    return new Matrix(data, [rows, cols]);\n  }\n}\n\nclass ColBuilder {\n  constructor() {\n    this.cols = [];\n    this.dim = 0;\n  }\n\n  addCol(...array) {\n    if (this.dim === 0) {\n      this.dim = array.length;\n    }\n    if (this.dim !== array.length)\n      throw new MatrixError(\n        `Added col of different dimension, actual dim is ${this.dim}`\n      );\n    this.cols.push(array);\n    return this;\n  }\n\n  build() {\n    if (this.cols.length > 0) return this.#buildWithCols();\n    throw new MatrixError(\"Building empty matrix\");\n  }\n\n  #buildWithCols() {\n    const rows = this.dim;\n    const cols = this.cols.length;\n    const data = new Float64Array(rows * cols);\n    const indexF = getIndexFromCoord(rows, cols);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        data[indexF(i, j)] = this.cols[j][i];\n      }\n    }\n    return new Matrix(data, [rows, cols]);\n  }\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                        MATRIX                                        *\n *                                                                                      */\n//========================================================================================\n\nexport default class Matrix {\n  /**\n   *\n   * @param {Float64Array} data: Matrix data in major row format\n   * @param {Array} shape: 2-array [rows,columns]\n   */\n  constructor(data, shape) {\n    this.data = data;\n    this.shape = shape;\n  }\n\n  get rows() {\n    return this.shape[0];\n  }\n\n  get cols() {\n    return this.shape[1];\n  }\n\n  get(i = 0, j = 0) {\n    const [_, cols] = this.shape;\n    return this.data[j + i * cols];\n  }\n\n  prod(matrix) {\n    if (this.cols !== matrix.rows) {\n      throw new MatrixError(\n        `Incompatible product size. Left ${this.shape}, right ${matrix.shape}`\n      );\n    }\n    const n = this.rows;\n    const m = this.cols;\n    const l = matrix.cols;\n    const prod = new Float64Array(n * l);\n    const indexer = getIndexFromCoord(n, l);\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < l; j++) {\n        let acc = 0;\n        for (let k = 0; k < m; k++) {\n          acc += this.get(i, k) * matrix.get(k, j);\n        }\n        prod[indexer(i, j)] = acc;\n      }\n    }\n\n    return new Matrix(prod, [n, l]);\n  }\n\n  dot(matrix) {\n    if (this.rows !== matrix.rows)\n      throw new MatrixError(\n        `Incompatible product size. Left ${this.shape}, right ${matrix.shape}`\n      );\n    const n = this.rows;\n    const m = this.cols;\n    const l = matrix.cols;\n    const prod = new Float64Array(m * l);\n    const indexer = getIndexFromCoord(m, l);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < l; j++) {\n        let acc = 0;\n        for (let k = 0; k < n; k++) {\n          acc += this.get(k, i) * matrix.get(k, j);\n        }\n        prod[indexer(i, j)] = acc;\n      }\n    }\n\n    return new Matrix(prod, [m, l]);\n  }\n\n  /**\n   *\n   * @param {*} lambda: (number, i, j) => number\n   * @returns Matrix\n   */\n  map(lambda = (x) => x) {\n    const getCoord = getCoordFromIndex(...this.shape);\n    return new Matrix(\n      this.data.map((x, k) => {\n        const [i, j] = getCoord(k);\n        return lambda(x, i, j);\n      }),\n      this.shape\n    );\n  }\n\n  /**\n   *\n   * @param {*} lambda (accumulator, number, i, j) => number\n   * @param {*} identity\n   */\n  reduce(lambda, identity = 0) {\n    const getCoord = getCoordFromIndex(...this.shape);\n    return this.data.reduce((e, x, k) => {\n      const [i, j] = getCoord(k);\n      return lambda(e, x, i, j);\n    }, identity);\n  }\n\n  fold = this.reduce;\n\n  /**\n   *\n   * @param {*} binaryLambda: (number,number) => number\n   */\n  op(matrix, binaryLambda) {\n    const [rows, cols] = this.shape;\n    const [mRows, mCols] = matrix.shape;\n    if (rows !== mRows || cols !== mCols)\n      throw new MatrixError(\"Matrix must be of same size\");\n    return new Matrix(\n      this.data.map((x, i) => binaryLambda(x, matrix.data[i])),\n      this.shape\n    );\n  }\n\n  add(matrix) {\n    return this.op(matrix, (a, b) => a + b);\n  }\n\n  sub(matrix) {\n    return this.op(matrix, (a, b) => a - b);\n  }\n\n  mul(matrix) {\n    return this.op(matrix, (a, b) => a * b);\n  }\n\n  div(matrix) {\n    return this.op(matrix, (a, b) => a / b);\n  }\n\n  scale(real) {\n    return this.map((x) => x * real);\n  }\n\n  norm() {\n    let acc = 0;\n    for (let i = 0; i < this.data.length; i++) {\n      acc += this.data[i] * this.data[i];\n    }\n    return Math.sqrt(acc);\n  }\n\n  length = this.norm;\n\n  equals(matrix, precision = 1e-6) {\n    if (!(matrix instanceof Matrix)) return false;\n    try {\n      return this.sub(matrix).length() < precision;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  toArray() {\n    return this.data;\n  }\n\n  static id = (n, m = n) => {\n    const en = Matrix.e(n);\n    let matrixBuilder = Matrix.colBuilder();\n    for (let i = 0; i < m; i++) {\n      matrixBuilder = matrixBuilder.addCol(...en(i).data);\n    }\n    return matrixBuilder.build();\n  };\n\n  static e = (n) => (i) => {\n    return new Matrix(\n      new Float64Array(n).map((_, j) => (i === j ? 1 : 0)),\n      [n, 1]\n    );\n  };\n\n  static dx = (n) => (i) => {\n    return new Matrix(\n      new Float64Array(n).map((_, j) => (i === j ? 1 : 0)),\n      [1, n]\n    );\n  };\n\n  static ZERO(n, m = 1) {\n    return Matrix.builder().size(n, m).build();\n  }\n\n  static random(n, m = 1) {\n    const data = new Float64Array(n * m);\n    for (let i = 0; i < data.length; i++) {\n      data[i] = Math.random();\n    }\n    return new Matrix(data, [n, m]);\n  }\n\n  static builder() {\n    return new MatrixBuilder();\n  }\n\n  static rowBuilder() {\n    return new RowBuilder();\n  }\n\n  static colBuilder() {\n    return new ColBuilder();\n  }\n\n  static vec(...array) {\n    return new ColBuilder().addCol(...array).build();\n  }\n\n  static cov(...array) {\n    return new RowBuilder().addRow(...array).build();\n  }\n\n  static vec2 = {\n    of: (x = 0, y = 0) => Matrix.vec(x, y),\n    e0: Matrix.vec(1, 0),\n    e1: Matrix.vec(0, 1),\n    ZERO: Matrix.ZERO(2, 1),\n  };\n\n  static vec3 = {\n    of: (x = 0, y = 0, z = 0) => Matrix.vec(x, y, z),\n    e0: Matrix.vec(1, 0, 0),\n    e1: Matrix.vec(0, 1, 0),\n    e2: Matrix.vec(0, 0, 1),\n    ZERO: Matrix.ZERO(3, 1),\n  };\n}\n\nexport class MatrixError extends Error {}\n","export const perf = (lambda) => {\n  const t = performance.now();\n  lambda();\n  return performance.now() - t;\n};\n\n/**\n *\n * @param {*} canvasBuilder : () => canvas\n * @returns\n */\nexport const testBuilder =\n  (canvasBuilder = canvasFactory) =>\n  /**\n   * Unit test maker\n   * @param {*} title\n   * @param {*} lambda: (canvas) => {}\n   */\n  (title, lambda = () => {}) => {\n    let canvas = canvasBuilder();\n    const timeInMillis = perf(() => lambda(canvas));\n    const domTest = document.createElement(\"div\");\n    const testTitle = document.createElement(\"h3\");\n    testTitle.innerText = title;\n    domTest.appendChild(testTitle);\n    domTest.appendChild(canvas.getDom());\n    const timeDom = document.createElement(\"h4\");\n    timeDom.innerText = `Test took ${timeInMillis}ms`;\n    domTest.appendChild(timeDom);\n    document.body.appendChild(domTest);\n  };\n\nconst canvasFactory = () => Canvas.builder().width(500).height(500).build();\n","module.exports = require(\"@babel/runtime/helpers/esm/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/esm/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/esm/createClass\");","module.exports = require(\"@babel/runtime/helpers/esm/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/esm/get\");","module.exports = require(\"@babel/runtime/helpers/esm/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/esm/inherits\");","module.exports = require(\"@babel/runtime/helpers/esm/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/esm/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/esm/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/esm/wrapNativeSuper\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Canvas_old from \"./Canvas_old/main/Canvas\";\nimport Canvas2D_old from \"./Canvas_old/main/Canvas2D\";\nimport ImageIO from \"./Canvas_old/main/ImageIO\";\nimport Canvas from \"./Canvas/main/Canvas\";\nimport Color from \"./Color/main/Color\";\nimport * as Utils from \"./Utils/main/Utils\";\nimport Animator from \"./Animator/main/Animator\";\nimport Matrix from \"./Matrix/main/Matrix\";\nimport Canvas2d from \"./Canvas2d/main/Canvas2d\";\nimport BBox from \"./BBox/main/BBox\";\n\nexport {\n  Canvas_old,\n  Canvas2D_old,\n  ImageIO,\n  Canvas,\n  Canvas2d,\n  Color,\n  Utils,\n  Animator,\n  Matrix,\n  BBox,\n};\n"],"names":["Animator","state","next","doWhile","_classCallCheck","requestAnimeId","_createClass","key","value","play","_this","requestAnimationFrame","stop","run","cancelAnimationFrame","builder","AnimatorBuilder","default","_state","_next","_end","initialState","nextState","_while","end","build","someAreEmpty","some","x","undefined","Error","Matrix","BBox","min","max","_defineProperty","add","sub","isEmpty","op","Math","center","scale","diagonal","box","EMPTY","newMin","newMax","newDiag","isAllPositive","data","every","move","vector","collidesWith","actionByTypes","type","action","i","length","equals","ofPoint","point","vec","apply","arguments","_class","Color","vec2","Canvas","canvas","getCanvas","ctx","getContext","willReadFrequently","image","getImageData","width","height","get","fill","color","ofRGBARaw","fillStyle","concat","red","green","blue","alpha","console","log","fillRect","map","lambda","n","w","floor","y","getPxl","j","_this$canvas","index","imgBuffer","setPxl","_this$canvas2","drawLine","start","shader","ofRGBA","_this$canvas3","_","line","_clipLine","toArray","_line","_slicedToArray","p0","p1","v","abs","k","s","_x","drawTriangle","p2","_drawConvexPolygon","paint","putImageData","arrayOfPoints","_this$canvas4","canvasBox","ZERO","of","boundingBox","forEach","_toConsumableArray","finalBox","inter","_finalBox$min$toArray","_finalBox$min$toArray2","xMin","yMin","_finalBox$max$toArray","_finalBox$max$toArray2","xMax","yMax","_isInsideConvex","points","m","vDotN","vi","r","orientation","myDot","_this$canvas5","bbox","pointStack","inStack","outStack","p","push","inPoint","outPoint","_getLineCanvasIntersection","_this$canvas6","boundary","intersectionSolutions","_ref","_ref2","d","solution","_solveLowTriMatrix","_solveUpTriMatrix","validIntersections","_ref3","t","a","f","v1","v2","av1","f1","f2","av2","CanvasBuilder","document","createElement","_width","_height","_canvas","setAttribute","Canvas2d","_Canvas","_inherits","_super","_createSuper","camera","call","setCamera","_this2","_get","_getPrototypeOf","prototype","c","_this2$forwardCoord","forwardCoord","_this2$forwardCoord2","_this$inverseCoord","inverseCoord","_this$inverseCoord2","_this$inverseCoord3","_this$inverseCoord4","startPos","endPos","q0","q1","q2","_this$camera","_min$data","minX","minY","_max$data","maxX","maxY","_this$camera2","_min$data2","_max$data2","Canvas2dBuilder","_CanvasBuilder","_super2","_this3","_len","args","Array","_key","_assertThisInitialized","_camera","canvasBase","ImageIO","u","ans","diff","dot","squareNorm","norm","sqrt","solve2by2UpperTriMatrix","h","z","aux","solve2by2LowerTriMatrix","imageData","getSize","paintImage","clearImage","rgba","useCanvasCtx","size","globalCompositeOperation","isClearImage","getImageIndex","drawPxl","rgb","x1","x2","stack","drawLineInt","validIntersection","pop","nn","tangent","normal","fmin","Number","MAX_VALUE","minDir","nextX","drawPolygon","array","isInsidePoly","isInsidePolygon","upperBox","MIN_VALUE","clampedSize","zeros","x3","isInsideConvex","drawQuad","x4","drawImage","img","isReady","drawCircle","corner","isInsideCircle","addEventListener","useCapture","drawString","string","contextShader","fillText","theta","acos","PI","simpleShader","element","colorShader","colors","auxShader","poly","interpolateColors","interpolateTriangleShader","interpolateQuadShader","quad","t1","t2","triangleBaryCoord","triangle","interpolateLineShader","vnorm","projection","quadTextureShader","quadTexCoord","interpolation","bilinearInterpolation","imageCache","imageShader","getImageCanvas","imageCanvas","imgSize","interpolateTexCoord","cornerColors","finalColor","triangleCache","hashMap","constains","triangleHash","set","reduce","hash","det","cache","values","acc","f03","f12","createCanvas","domId","getElementById","appendChild","Canvas2D","cameraSpace","Object","create","constructor","integerTransform","xint","yint","inverseTransform","xt","yt","y1","y2","y3","y4","canvasAux","contextAux","getDataFromImage","loadImage","src","Image","onload","generateImageReadyPredicate","MAX_8BIT","getRGBA","Uint8Array","random","getIndexFromCoord","getCoordFromIndex","index2Key","key2Index","split","MatrixBuilder","_size","MatrixError","_this$_size","Float64Array","indexer","keys","RowBuilder","rows","dim","addRow","_buildWithRows","cols","indexF","_buildWithCols","WeakSet","ColBuilder","_classPrivateMethodInitSpec","addCol","_len2","_key2","_classPrivateMethodGet","_buildWithCols2","shape","_this$shape","prod","matrix","l","getCoord","_getCoord","_getCoord2","identity","e","_getCoord3","_getCoord4","binaryLambda","_this$shape2","_matrix$shape","mRows","mCols","b","mul","div","real","precision","error","rowBuilder","colBuilder","_ColBuilder","cov","_RowBuilder","_class2","en","matrixBuilder","_matrixBuilder","e0","e1","e2","_Error","_wrapNativeSuper","perf","performance","now","testBuilder","canvasBuilder","canvasFactory","title","timeInMillis","domTest","testTitle","innerText","getDom","timeDom","body","Canvas_old","Canvas2D_old","Utils"],"sourceRoot":""}